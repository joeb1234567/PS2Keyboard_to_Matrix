   1               		.file	"matrix_kbd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	LookupKeys:
  12               	.LFB9:
  13               		.file 1 "common/matrix_kbd.c"
   1:common/matrix_kbd.c **** /* 
   2:common/matrix_kbd.c **** 	matrix_kbd.h
   3:common/matrix_kbd.c **** 	
   4:common/matrix_kbd.c **** 	Definitions for handling a matrix keyboard output. 
   5:common/matrix_kbd.c **** 		
   6:common/matrix_kbd.c **** 	2009-07-23, P.Harvey-Smith.
   7:common/matrix_kbd.c ****     
   8:common/matrix_kbd.c ****     2010-05-03, Fixed so that CTRL-BREAK now works.
   9:common/matrix_kbd.c **** 	
  10:common/matrix_kbd.c **** 	2011-04-27, Seperated driver for MT8816 into seperate driver file.
  11:common/matrix_kbd.c **** 				Changed from using a table containing all the possible scancodes
  12:common/matrix_kbd.c **** 				both used and unused to a table that only contains used scancodes.
  13:common/matrix_kbd.c **** 				
  14:common/matrix_kbd.c **** 	2021-01-15, Modified the way that callbacks (to the machine driver) are done, so
  15:common/matrix_kbd.c **** 				they are done *BEFORE* any table processing. The callback returns
  16:common/matrix_kbd.c **** 				a flag to say if it has processed the key or not. 
  17:common/matrix_kbd.c **** 				
  18:common/matrix_kbd.c **** 	2021-01-18, Modified LookupKeys, so that we can use several blocks of modifier
  19:common/matrix_kbd.c **** 				keys within the shift table this way if we wanted to say have a PS/2
  20:common/matrix_kbd.c **** 				code encode to the matrix's shift-key but another to ctrl-key we can 
  21:common/matrix_kbd.c **** 				do it. This is accieved by having an entry in the shift key table 
  22:common/matrix_kbd.c **** 				that consists of the scancode and prefix code being set to 
  23:common/matrix_kbd.c **** 				SCAN_CODE_NEWSHIFT, and the matrix code bing the matrix code of the
  24:common/matrix_kbd.c **** 				new modifier key. All subsiquent entries will then use this code.
  25:common/matrix_kbd.c **** 				This can of course be applied multiple times for different modifiers.
  26:common/matrix_kbd.c **** 				Each scan of the table resets to the shift field of Matrix->matrix_shift
  27:common/matrix_kbd.c **** 				
  28:common/matrix_kbd.c **** 	2021-01-24, Added code to dump the PS2->Matrix table as an array on screen. This
  29:common/matrix_kbd.c **** 			    is usefull for spotting matrix positions that have no PS/2 key encoding 
  30:common/matrix_kbd.c **** 				to them.
  31:common/matrix_kbd.c **** */
  32:common/matrix_kbd.c **** 
  33:common/matrix_kbd.c **** #include <avr/io.h>
  34:common/matrix_kbd.c **** #include <avr/pgmspace.h>
  35:common/matrix_kbd.c **** #include <util/delay.h>
  36:common/matrix_kbd.c **** #include <string.h>
  37:common/matrix_kbd.c **** #include "matrix_kbd.h"
  38:common/matrix_kbd.c **** #include "ps2kbd.h"
  39:common/matrix_kbd.c **** #include "scancode.h"
  40:common/matrix_kbd.c **** #include "status.h"
  41:common/matrix_kbd.c **** #include "globalio.h"
  42:common/matrix_kbd.c **** #include "io.h"
  43:common/matrix_kbd.c **** 
  44:common/matrix_kbd.c **** static uint8_t	LastScanCode;
  45:common/matrix_kbd.c **** static uint8_t	PrefixCode;
  46:common/matrix_kbd.c **** 
  47:common/matrix_kbd.c **** static uint8_t  CodeCount;
  48:common/matrix_kbd.c **** 
  49:common/matrix_kbd.c **** static matrix_t		*Matrix = NULL;	
  50:common/matrix_kbd.c **** 
  51:common/matrix_kbd.c **** void check_matrix(void);
  52:common/matrix_kbd.c **** 
  53:common/matrix_kbd.c **** // initialise the matrix routines 
  54:common/matrix_kbd.c **** void matrix_init(matrix_t *InitMatrix)
  55:common/matrix_kbd.c **** {
  56:common/matrix_kbd.c **** 	logv0("Keyboard matrix init\n");
  57:common/matrix_kbd.c **** 
  58:common/matrix_kbd.c **** 	LastScanCode=0x00;
  59:common/matrix_kbd.c **** 	PrefixCode=SCAN_CODE_NO_PREFIX;
  60:common/matrix_kbd.c **** 
  61:common/matrix_kbd.c **** 	Matrix=InitMatrix;
  62:common/matrix_kbd.c **** 
  63:common/matrix_kbd.c ****     // Init Scancode buffer variables
  64:common/matrix_kbd.c ****     CodeCount=0;
  65:common/matrix_kbd.c **** 	
  66:common/matrix_kbd.c **** 	// If DIP4 is set then display matrix.
  67:common/matrix_kbd.c **** 	if (DIPIsSet(DIPS4)) 
  68:common/matrix_kbd.c **** 		check_matrix();
  69:common/matrix_kbd.c **** }
  70:common/matrix_kbd.c **** 
  71:common/matrix_kbd.c **** static uint8_t LookupKeys(uint8_t	Scancode,
  72:common/matrix_kbd.c **** 					      uint8_t 	IsShift)
  73:common/matrix_kbd.c **** {
  14               		.loc 1 73 0
  15               		.cfi_startproc
  16 0000 CF92      		push r12
  17               	.LCFI0:
  18               		.cfi_def_cfa_offset 3
  19               		.cfi_offset 12, -2
  20 0002 DF92      		push r13
  21               	.LCFI1:
  22               		.cfi_def_cfa_offset 4
  23               		.cfi_offset 13, -3
  24 0004 EF92      		push r14
  25               	.LCFI2:
  26               		.cfi_def_cfa_offset 5
  27               		.cfi_offset 14, -4
  28 0006 FF92      		push r15
  29               	.LCFI3:
  30               		.cfi_def_cfa_offset 6
  31               		.cfi_offset 15, -5
  32 0008 0F93      		push r16
  33               	.LCFI4:
  34               		.cfi_def_cfa_offset 7
  35               		.cfi_offset 16, -6
  36 000a 1F93      		push r17
  37               	.LCFI5:
  38               		.cfi_def_cfa_offset 8
  39               		.cfi_offset 17, -7
  40 000c CF93      		push r28
  41               	.LCFI6:
  42               		.cfi_def_cfa_offset 9
  43               		.cfi_offset 28, -8
  44 000e DF93      		push r29
  45               	.LCFI7:
  46               		.cfi_def_cfa_offset 10
  47               		.cfi_offset 29, -9
  48               	/* prologue: function */
  49               	/* frame size = 0 */
  50               	/* stack size = 8 */
  51               	.L__stack_usage = 8
  52 0010 C82E      		mov r12,r24
  53 0012 E62E      		mov r14,r22
  74:common/matrix_kbd.c **** 	uint16_t	Offset 	= 0;
  75:common/matrix_kbd.c **** 	uint8_t		*Table;
  76:common/matrix_kbd.c **** 	uint8_t		Prefix;
  77:common/matrix_kbd.c **** 	uint8_t		Code;	
  78:common/matrix_kbd.c **** 	uint8_t		MatrixCode;	
  79:common/matrix_kbd.c **** 	uint8_t		Handled	= 0;
  80:common/matrix_kbd.c **** 	uint8_t		ShiftKey = Matrix->matrix_shift;	// Default matrix shift key.
  54               		.loc 1 80 0
  55 0014 E091 0000 		lds r30,Matrix
  56 0018 F091 0000 		lds r31,Matrix+1
  57 001c D084      		ldd r13,Z+8
  81:common/matrix_kbd.c **** 	
  82:common/matrix_kbd.c **** 	// Select which table to use
  83:common/matrix_kbd.c **** 	if(IsShift)
  58               		.loc 1 83 0
  59 001e 6623      		tst r22
  60 0020 01F0      		breq .L2
  84:common/matrix_kbd.c **** 		Table=Matrix->ScancodeShiftTable;
  61               		.loc 1 84 0
  62 0022 0681      		ldd r16,Z+6
  63 0024 1781      		ldd r17,Z+7
  64 0026 00C0      		rjmp .L3
  65               	.L2:
  85:common/matrix_kbd.c **** 	else
  86:common/matrix_kbd.c **** 		Table=Matrix->ScancodeTable;
  66               		.loc 1 86 0
  67 0028 0481      		ldd r16,Z+4
  68 002a 1581      		ldd r17,Z+5
  69               	.L3:
  70               	.LBB2:
  87:common/matrix_kbd.c **** 	
  88:common/matrix_kbd.c **** 	// Point at initial values
  89:common/matrix_kbd.c **** 	Prefix 		= pgm_read_byte(&Table[Offset++]);
  71               		.loc 1 89 0
  72 002c F801      		movw r30,r16
  73               	/* #APP */
  74               	 ;  89 "common/matrix_kbd.c" 1
  75 002e F490      		lpm r15, Z
  76               		
  77               	 ;  0 "" 2
  78               	/* #NOAPP */
  79               	.LBE2:
  80               	.LBB3:
  90:common/matrix_kbd.c **** 	Code		= pgm_read_byte(&Table[Offset++]);
  81               		.loc 1 90 0
  82 0030 3196      		adiw r30,1
  83               	/* #APP */
  84               	 ;  90 "common/matrix_kbd.c" 1
  85 0032 D491      		lpm r29, Z
  86               		
  87               	 ;  0 "" 2
  88               	/* #NOAPP */
  89               	.LBE3:
  90               	.LBB4:
  91:common/matrix_kbd.c **** 	MatrixCode	= pgm_read_byte(&Table[Offset++]);
  91               		.loc 1 91 0
  92 0034 3196      		adiw r30,1
  93               	/* #APP */
  94               	 ;  91 "common/matrix_kbd.c" 1
  95 0036 C491      		lpm r28, Z
  96               		
  97               	 ;  0 "" 2
  98               	/* #NOAPP */
  99               	.LBE4:
  92:common/matrix_kbd.c **** 	
  93:common/matrix_kbd.c **** 	logv0("LookupKeys(%02X,%d), Table=%05X\n",Scancode,IsShift,Table);
 100               		.loc 1 93 0
 101 0038 8091 0000 		lds r24,STATUS_VERBOSE
 102 003c 8823      		tst r24
 103 003e 01F0      		breq .L4
 104               		.loc 1 93 0 is_stmt 0 discriminator 1
 105 0040 1F93      		push r17
 106               	.LCFI8:
 107               		.cfi_def_cfa_offset 11
 108 0042 0F93      		push r16
 109               	.LCFI9:
 110               		.cfi_def_cfa_offset 12
 111 0044 1F92      		push __zero_reg__
 112               	.LCFI10:
 113               		.cfi_def_cfa_offset 13
 114 0046 EF92      		push r14
 115               	.LCFI11:
 116               		.cfi_def_cfa_offset 14
 117 0048 1F92      		push __zero_reg__
 118               	.LCFI12:
 119               		.cfi_def_cfa_offset 15
 120 004a CF92      		push r12
 121               	.LCFI13:
 122               		.cfi_def_cfa_offset 16
 123 004c 80E0      		ldi r24,lo8(__c.2334)
 124 004e 90E0      		ldi r25,hi8(__c.2334)
 125 0050 9F93      		push r25
 126               	.LCFI14:
 127               		.cfi_def_cfa_offset 17
 128 0052 8F93      		push r24
 129               	.LCFI15:
 130               		.cfi_def_cfa_offset 18
 131 0054 80E0      		ldi r24,lo8(ser0stream)
 132 0056 90E0      		ldi r25,hi8(ser0stream)
 133 0058 9F93      		push r25
 134               	.LCFI16:
 135               		.cfi_def_cfa_offset 19
 136 005a 8F93      		push r24
 137               	.LCFI17:
 138               		.cfi_def_cfa_offset 20
 139 005c 0E94 0000 		call fprintf_P
 140 0060 8DB7      		in r24,__SP_L__
 141 0062 9EB7      		in r25,__SP_H__
 142 0064 0A96      		adiw r24,10
 143 0066 0FB6      		in __tmp_reg__,__SREG__
 144 0068 F894      		cli
 145 006a 9EBF      		out __SP_H__,r25
 146 006c 0FBE      		out __SREG__,__tmp_reg__
 147 006e 8DBF      		out __SP_L__,r24
 148               	.LCFI18:
 149               		.cfi_def_cfa_offset 10
 150               	.L4:
  94:common/matrix_kbd.c **** 	
  95:common/matrix_kbd.c **** 	// Scan through shift code table
  96:common/matrix_kbd.c **** 	while((Prefix!=SCAN_CODE_TERMINATE) && (!Handled))
  97:common/matrix_kbd.c **** 	{
  98:common/matrix_kbd.c **** 		//logv0("o=%d, p=%02X, c=%02X, z=%02X\n",Offset,Prefix,Code,ZXCode);
  99:common/matrix_kbd.c **** 		// If we are in the shift lookup table, and we see the code for a new shift key
 100:common/matrix_kbd.c **** 		// then set it. 
 101:common/matrix_kbd.c **** 		if((SCAN_CODE_NEWSHIFT == Prefix) && (SCAN_CODE_NEWSHIFT == Code) && IsShift)
 102:common/matrix_kbd.c **** 		{
 103:common/matrix_kbd.c **** 			ShiftKey = MatrixCode;
 104:common/matrix_kbd.c **** 		}
 105:common/matrix_kbd.c **** 		
 106:common/matrix_kbd.c **** 
 107:common/matrix_kbd.c **** 		// if code found, output it.
 108:common/matrix_kbd.c **** 		// If IsShift is true press ShiftKey then key
 109:common/matrix_kbd.c **** 		// on release release key then ShiftKey
 110:common/matrix_kbd.c **** 		if((PrefixCode==Prefix) && (Scancode==Code))
 111:common/matrix_kbd.c **** 		{
 112:common/matrix_kbd.c **** 			logv0("MatrixCode=%02X\n",MatrixCode);
 113:common/matrix_kbd.c **** 
 114:common/matrix_kbd.c **** 			if(LastScanCode!=SCAN_CODE_RELEASE)
 115:common/matrix_kbd.c **** 			{
 116:common/matrix_kbd.c **** 				if(MatrixCode!=RESET_KEY)
 117:common/matrix_kbd.c **** 				{
 118:common/matrix_kbd.c **** 					if(IsShift)
 119:common/matrix_kbd.c **** 						Matrix->output(ShiftKey,KEY_DOWN);
 120:common/matrix_kbd.c **** 
 121:common/matrix_kbd.c **** 					Matrix->output(MatrixCode,KEY_DOWN);
 122:common/matrix_kbd.c **** 				}
 123:common/matrix_kbd.c **** 				
 124:common/matrix_kbd.c **** 				Handled++;
 125:common/matrix_kbd.c **** 			}
 126:common/matrix_kbd.c **** 			else
 127:common/matrix_kbd.c **** 			{
 128:common/matrix_kbd.c **** 				if(MatrixCode!=Matrix->matrix_reset)
 129:common/matrix_kbd.c **** 				{
 130:common/matrix_kbd.c **** 					Matrix->output(MatrixCode,KEY_UP);
 131:common/matrix_kbd.c **** 					if(IsShift)
 132:common/matrix_kbd.c **** 						Matrix->output(ShiftKey,KEY_UP);
 133:common/matrix_kbd.c **** 				}
 134:common/matrix_kbd.c **** 				else
 135:common/matrix_kbd.c **** 					ResetMachine();
 136:common/matrix_kbd.c **** 					
 137:common/matrix_kbd.c **** 				Handled++;
 138:common/matrix_kbd.c **** 			}
 139:common/matrix_kbd.c **** 			Prefix=SCAN_CODE_TERMINATE;
 151               		.loc 1 139 0 is_stmt 1
 152 0070 80E0      		ldi r24,0
 153 0072 23E0      		ldi r18,lo8(3)
 154 0074 30E0      		ldi r19,0
 112:common/matrix_kbd.c **** 
 155               		.loc 1 112 0
 156 0076 40E0      		ldi r20,lo8(__c.2336)
 157 0078 50E0      		ldi r21,hi8(__c.2336)
 158 007a 60E0      		ldi r22,lo8(ser0stream)
 159 007c 70E0      		ldi r23,hi8(ser0stream)
 160               	.L5:
  96:common/matrix_kbd.c **** 	{
 161               		.loc 1 96 0
 162 007e EFEF      		ldi r30,lo8(-1)
 163 0080 FE16      		cp r15,r30
 164 0082 01F4      		brne .+2
 165 0084 00C0      		rjmp .L36
  96:common/matrix_kbd.c **** 	{
 166               		.loc 1 96 0 is_stmt 0 discriminator 1
 167 0086 8111      		cpse r24,__zero_reg__
 168 0088 00C0      		rjmp .L36
 101:common/matrix_kbd.c **** 		{
 169               		.loc 1 101 0 is_stmt 1
 170 008a 9EEF      		ldi r25,lo8(-2)
 171 008c F912      		cpse r15,r25
 172 008e 00C0      		rjmp .L6
 101:common/matrix_kbd.c **** 		{
 173               		.loc 1 101 0 is_stmt 0 discriminator 1
 174 0090 DE3F      		cpi r29,lo8(-2)
 175 0092 01F4      		brne .L6
 101:common/matrix_kbd.c **** 		{
 176               		.loc 1 101 0 discriminator 2
 177 0094 E110      		cpse r14,__zero_reg__
 101:common/matrix_kbd.c **** 		{
 178               		.loc 1 101 0
 179 0096 DC2E      		mov r13,r28
 180               	.L6:
 110:common/matrix_kbd.c **** 		{
 181               		.loc 1 110 0 is_stmt 1
 182 0098 9091 0000 		lds r25,PrefixCode
 183 009c F912      		cpse r15,r25
 184 009e 00C0      		rjmp .L7
 110:common/matrix_kbd.c **** 		{
 185               		.loc 1 110 0 is_stmt 0 discriminator 1
 186 00a0 DC11      		cpse r29,r12
 187 00a2 00C0      		rjmp .L7
 112:common/matrix_kbd.c **** 
 188               		.loc 1 112 0 is_stmt 1
 189 00a4 8091 0000 		lds r24,STATUS_VERBOSE
 190 00a8 8823      		tst r24
 191 00aa 01F0      		breq .L8
 112:common/matrix_kbd.c **** 
 192               		.loc 1 112 0 is_stmt 0 discriminator 1
 193 00ac 1F92      		push __zero_reg__
 194               	.LCFI19:
 195               		.cfi_def_cfa_offset 11
 196 00ae CF93      		push r28
 197               	.LCFI20:
 198               		.cfi_def_cfa_offset 12
 199 00b0 5F93      		push r21
 200               	.LCFI21:
 201               		.cfi_def_cfa_offset 13
 202 00b2 4F93      		push r20
 203               	.LCFI22:
 204               		.cfi_def_cfa_offset 14
 205 00b4 7F93      		push r23
 206               	.LCFI23:
 207               		.cfi_def_cfa_offset 15
 208 00b6 6F93      		push r22
 209               	.LCFI24:
 210               		.cfi_def_cfa_offset 16
 211 00b8 0E94 0000 		call fprintf_P
 212 00bc 0F90      		pop __tmp_reg__
 213 00be 0F90      		pop __tmp_reg__
 214 00c0 0F90      		pop __tmp_reg__
 215 00c2 0F90      		pop __tmp_reg__
 216 00c4 0F90      		pop __tmp_reg__
 217 00c6 0F90      		pop __tmp_reg__
 218               	.LCFI25:
 219               		.cfi_def_cfa_offset 10
 220               	.L8:
 114:common/matrix_kbd.c **** 			{
 221               		.loc 1 114 0 is_stmt 1
 222 00c8 8091 0000 		lds r24,LastScanCode
 223 00cc 803F      		cpi r24,lo8(-16)
 224 00ce 01F0      		breq .L9
 116:common/matrix_kbd.c **** 				{
 225               		.loc 1 116 0
 226 00d0 CF3F      		cpi r28,lo8(-1)
 227 00d2 01F0      		breq .L14
 118:common/matrix_kbd.c **** 						Matrix->output(ShiftKey,KEY_DOWN);
 228               		.loc 1 118 0
 229 00d4 EE20      		tst r14
 230 00d6 01F0      		breq .L11
 119:common/matrix_kbd.c **** 
 231               		.loc 1 119 0
 232 00d8 E091 0000 		lds r30,Matrix
 233 00dc F091 0000 		lds r31,Matrix+1
 234 00e0 0190      		ld __tmp_reg__,Z+
 235 00e2 F081      		ld r31,Z
 236 00e4 E02D      		mov r30,__tmp_reg__
 237 00e6 61E0      		ldi r22,lo8(1)
 238 00e8 8D2D      		mov r24,r13
 239 00ea 0995      		icall
 240               	.L11:
 121:common/matrix_kbd.c **** 				}
 241               		.loc 1 121 0
 242 00ec E091 0000 		lds r30,Matrix
 243 00f0 F091 0000 		lds r31,Matrix+1
 244 00f4 0190      		ld __tmp_reg__,Z+
 245 00f6 F081      		ld r31,Z
 246 00f8 E02D      		mov r30,__tmp_reg__
 247 00fa 61E0      		ldi r22,lo8(1)
 248 00fc 8C2F      		mov r24,r28
 249 00fe 00C0      		rjmp .L37
 250               	.L9:
 128:common/matrix_kbd.c **** 				{
 251               		.loc 1 128 0
 252 0100 E091 0000 		lds r30,Matrix
 253 0104 F091 0000 		lds r31,Matrix+1
 254 0108 8185      		ldd r24,Z+9
 255 010a C817      		cp r28,r24
 256 010c 01F0      		breq .L13
 130:common/matrix_kbd.c **** 					if(IsShift)
 257               		.loc 1 130 0
 258 010e 0190      		ld __tmp_reg__,Z+
 259 0110 F081      		ld r31,Z
 260 0112 E02D      		mov r30,__tmp_reg__
 261 0114 60E0      		ldi r22,0
 262 0116 8C2F      		mov r24,r28
 263 0118 0995      		icall
 131:common/matrix_kbd.c **** 						Matrix->output(ShiftKey,KEY_UP);
 264               		.loc 1 131 0
 265 011a EE20      		tst r14
 266 011c 01F0      		breq .L14
 132:common/matrix_kbd.c **** 				}
 267               		.loc 1 132 0
 268 011e E091 0000 		lds r30,Matrix
 269 0122 F091 0000 		lds r31,Matrix+1
 270 0126 0190      		ld __tmp_reg__,Z+
 271 0128 F081      		ld r31,Z
 272 012a E02D      		mov r30,__tmp_reg__
 273 012c 60E0      		ldi r22,0
 274 012e 8D2D      		mov r24,r13
 275               	.L37:
 276 0130 0995      		icall
 277 0132 00C0      		rjmp .L14
 278               	.L13:
 135:common/matrix_kbd.c **** 					
 279               		.loc 1 135 0
 280 0134 0E94 0000 		call ResetMachine
 281               	.L14:
 137:common/matrix_kbd.c **** 			}
 282               		.loc 1 137 0
 283 0138 81E0      		ldi r24,lo8(1)
 284 013a 00C0      		rjmp .L36
 285               	.L7:
 286               	.LBB5:
 140:common/matrix_kbd.c **** 		}
 141:common/matrix_kbd.c **** 		else
 142:common/matrix_kbd.c **** 		{
 143:common/matrix_kbd.c **** 			Prefix 		= pgm_read_byte(&Table[Offset++]);
 287               		.loc 1 143 0
 288 013c F801      		movw r30,r16
 289 013e E20F      		add r30,r18
 290 0140 F31F      		adc r31,r19
 291               	/* #APP */
 292               	 ;  143 "common/matrix_kbd.c" 1
 293 0142 F490      		lpm r15, Z
 294               		
 295               	 ;  0 "" 2
 296               	/* #NOAPP */
 297               	.LBE5:
 298               	.LBB6:
 144:common/matrix_kbd.c **** 			Code		= pgm_read_byte(&Table[Offset++]);
 299               		.loc 1 144 0
 300 0144 F901      		movw r30,r18
 301 0146 3196      		adiw r30,1
 302 0148 E00F      		add r30,r16
 303 014a F11F      		adc r31,r17
 304               	/* #APP */
 305               	 ;  144 "common/matrix_kbd.c" 1
 306 014c D491      		lpm r29, Z
 307               		
 308               	 ;  0 "" 2
 309               	/* #NOAPP */
 310               	.LBE6:
 311               	.LBB7:
 145:common/matrix_kbd.c **** 			MatrixCode	= pgm_read_byte(&Table[Offset++]);
 312               		.loc 1 145 0
 313 014e F901      		movw r30,r18
 314 0150 3296      		adiw r30,2
 315 0152 E00F      		add r30,r16
 316 0154 F11F      		adc r31,r17
 317 0156 2D5F      		subi r18,-3
 318 0158 3F4F      		sbci r19,-1
 319               	/* #APP */
 320               	 ;  145 "common/matrix_kbd.c" 1
 321 015a C491      		lpm r28, Z
 322               		
 323               	 ;  0 "" 2
 324               	/* #NOAPP */
 325 015c 00C0      		rjmp .L5
 326               	.L36:
 327               	/* epilogue start */
 328               	.LBE7:
 146:common/matrix_kbd.c **** 		}
 147:common/matrix_kbd.c **** 	}
 148:common/matrix_kbd.c **** 	
 149:common/matrix_kbd.c **** 	return Handled;
 150:common/matrix_kbd.c **** }
 329               		.loc 1 150 0
 330 015e DF91      		pop r29
 331 0160 CF91      		pop r28
 332 0162 1F91      		pop r17
 333 0164 0F91      		pop r16
 334 0166 FF90      		pop r15
 335 0168 EF90      		pop r14
 336 016a DF90      		pop r13
 337 016c CF90      		pop r12
 338 016e 0895      		ret
 339               		.cfi_endproc
 340               	.LFE9:
 342               	.global	matrix_check_output
 344               	matrix_check_output:
 345               	.LFB10:
 151:common/matrix_kbd.c **** 
 152:common/matrix_kbd.c **** /*
 153:common/matrix_kbd.c **** 	Check the scancode queue, and if codes are available interpret them, possibly
 154:common/matrix_kbd.c **** 	outputting keys to the matrix driver.
 155:common/matrix_kbd.c **** */
 156:common/matrix_kbd.c **** 
 157:common/matrix_kbd.c **** void matrix_check_output(void)
 158:common/matrix_kbd.c **** {
 346               		.loc 1 158 0
 347               		.cfi_startproc
 348 0170 CF93      		push r28
 349               	.LCFI26:
 350               		.cfi_def_cfa_offset 3
 351               		.cfi_offset 28, -2
 352               	/* prologue: function */
 353               	/* frame size = 0 */
 354               	/* stack size = 1 */
 355               	.L__stack_usage = 1
 159:common/matrix_kbd.c **** 	uint8_t	Scancode;
 160:common/matrix_kbd.c **** 	uint8_t	KeyValid = false;
 161:common/matrix_kbd.c **** 	uint8_t	IsShift;
 162:common/matrix_kbd.c **** 	
 163:common/matrix_kbd.c **** 	if(Matrix==NULL)
 356               		.loc 1 163 0
 357 0172 E091 0000 		lds r30,Matrix
 358 0176 F091 0000 		lds r31,Matrix+1
 359 017a 3097      		sbiw r30,0
 360 017c 01F4      		brne .L40
 164:common/matrix_kbd.c **** 	{
 165:common/matrix_kbd.c **** 		logv0("ERROR, no matrix driver initialised, please initialise first with matrix_init()\n");
 361               		.loc 1 165 0
 362 017e 8091 0000 		lds r24,STATUS_VERBOSE
 363 0182 8823      		tst r24
 364 0184 01F4      		brne .+2
 365 0186 00C0      		rjmp .L39
 366               		.loc 1 165 0 is_stmt 0 discriminator 1
 367 0188 80E0      		ldi r24,lo8(__c.2356)
 368 018a 90E0      		ldi r25,hi8(__c.2356)
 369 018c 9F93      		push r25
 370               	.LCFI27:
 371               		.cfi_def_cfa_offset 4
 372 018e 8F93      		push r24
 373               	.LCFI28:
 374               		.cfi_def_cfa_offset 5
 375 0190 80E0      		ldi r24,lo8(ser0stream)
 376 0192 90E0      		ldi r25,hi8(ser0stream)
 377 0194 9F93      		push r25
 378               	.LCFI29:
 379               		.cfi_def_cfa_offset 6
 380 0196 8F93      		push r24
 381               	.LCFI30:
 382               		.cfi_def_cfa_offset 7
 383 0198 0E94 0000 		call fprintf_P
 384 019c 0F90      		pop __tmp_reg__
 385 019e 0F90      		pop __tmp_reg__
 386 01a0 0F90      		pop __tmp_reg__
 387 01a2 0F90      		pop __tmp_reg__
 388               	.LCFI31:
 389               		.cfi_def_cfa_offset 3
 390 01a4 00C0      		rjmp .L39
 391               	.L40:
 166:common/matrix_kbd.c **** 		return;
 167:common/matrix_kbd.c **** 	}
 168:common/matrix_kbd.c **** 	else
 169:common/matrix_kbd.c **** 	{
 170:common/matrix_kbd.c **** 		if((Matrix->output==NULL) || (Matrix->ScancodeTable==NULL) || (Matrix->ScancodeShiftTable==NULL))
 392               		.loc 1 170 0 is_stmt 1
 393 01a6 8081      		ld r24,Z
 394 01a8 9181      		ldd r25,Z+1
 395 01aa 892B      		or r24,r25
 396 01ac 01F0      		breq .L43
 397               		.loc 1 170 0 is_stmt 0 discriminator 1
 398 01ae 8481      		ldd r24,Z+4
 399 01b0 9581      		ldd r25,Z+5
 400 01b2 892B      		or r24,r25
 401 01b4 01F0      		breq .L43
 402               		.loc 1 170 0 discriminator 2
 403 01b6 8681      		ldd r24,Z+6
 404 01b8 9781      		ldd r25,Z+7
 405 01ba 892B      		or r24,r25
 406 01bc 01F4      		brne .L44
 407               	.L43:
 171:common/matrix_kbd.c **** 		{
 172:common/matrix_kbd.c **** 			logv0("ERROR, matrix structure not correctly initialized!\n");
 408               		.loc 1 172 0 is_stmt 1
 409 01be 8091 0000 		lds r24,STATUS_VERBOSE
 410 01c2 8823      		tst r24
 411 01c4 01F0      		breq .L45
 412               		.loc 1 172 0 is_stmt 0 discriminator 1
 413 01c6 80E0      		ldi r24,lo8(__c.2358)
 414 01c8 90E0      		ldi r25,hi8(__c.2358)
 415 01ca 9F93      		push r25
 416               	.LCFI32:
 417               		.cfi_def_cfa_offset 4
 418 01cc 8F93      		push r24
 419               	.LCFI33:
 420               		.cfi_def_cfa_offset 5
 421 01ce 80E0      		ldi r24,lo8(ser0stream)
 422 01d0 90E0      		ldi r25,hi8(ser0stream)
 423 01d2 9F93      		push r25
 424               	.LCFI34:
 425               		.cfi_def_cfa_offset 6
 426 01d4 8F93      		push r24
 427               	.LCFI35:
 428               		.cfi_def_cfa_offset 7
 429 01d6 0E94 0000 		call fprintf_P
 430 01da 0F90      		pop __tmp_reg__
 431 01dc 0F90      		pop __tmp_reg__
 432 01de 0F90      		pop __tmp_reg__
 433 01e0 0F90      		pop __tmp_reg__
 434               	.LCFI36:
 435               		.cfi_def_cfa_offset 3
 436               	.L45:
 173:common/matrix_kbd.c **** 			logv0("Matrix->output=%d, Matrix->ScancodeTable=%d, Matrix->ScancodeShiftTable=%d",
 437               		.loc 1 173 0 is_stmt 1
 438 01e2 8091 0000 		lds r24,STATUS_VERBOSE
 439 01e6 8823      		tst r24
 440 01e8 01F4      		brne .+2
 441 01ea 00C0      		rjmp .L39
 442               		.loc 1 173 0 is_stmt 0 discriminator 1
 443 01ec E091 0000 		lds r30,Matrix
 444 01f0 F091 0000 		lds r31,Matrix+1
 445 01f4 8781      		ldd r24,Z+7
 446 01f6 8F93      		push r24
 447               	.LCFI37:
 448               		.cfi_def_cfa_offset 4
 449 01f8 8681      		ldd r24,Z+6
 450 01fa 8F93      		push r24
 451               	.LCFI38:
 452               		.cfi_def_cfa_offset 5
 453 01fc 8581      		ldd r24,Z+5
 454 01fe 8F93      		push r24
 455               	.LCFI39:
 456               		.cfi_def_cfa_offset 6
 457 0200 8481      		ldd r24,Z+4
 458 0202 8F93      		push r24
 459               	.LCFI40:
 460               		.cfi_def_cfa_offset 7
 461 0204 8181      		ldd r24,Z+1
 462 0206 8F93      		push r24
 463               	.LCFI41:
 464               		.cfi_def_cfa_offset 8
 465 0208 8081      		ld r24,Z
 466 020a 8F93      		push r24
 467               	.LCFI42:
 468               		.cfi_def_cfa_offset 9
 469 020c 80E0      		ldi r24,lo8(__c.2360)
 470 020e 90E0      		ldi r25,hi8(__c.2360)
 471 0210 9F93      		push r25
 472               	.LCFI43:
 473               		.cfi_def_cfa_offset 10
 474 0212 8F93      		push r24
 475               	.LCFI44:
 476               		.cfi_def_cfa_offset 11
 477 0214 80E0      		ldi r24,lo8(ser0stream)
 478 0216 90E0      		ldi r25,hi8(ser0stream)
 479 0218 9F93      		push r25
 480               	.LCFI45:
 481               		.cfi_def_cfa_offset 12
 482 021a 8F93      		push r24
 483               	.LCFI46:
 484               		.cfi_def_cfa_offset 13
 485 021c 0E94 0000 		call fprintf_P
 486 0220 8DB7      		in r24,__SP_L__
 487 0222 9EB7      		in r25,__SP_H__
 488 0224 0A96      		adiw r24,10
 489 0226 0FB6      		in __tmp_reg__,__SREG__
 490 0228 F894      		cli
 491 022a 9EBF      		out __SP_H__,r25
 492 022c 0FBE      		out __SREG__,__tmp_reg__
 493 022e 8DBF      		out __SP_L__,r24
 494               	.LCFI47:
 495               		.cfi_def_cfa_offset 3
 496 0230 00C0      		rjmp .L39
 497               	.L44:
 174:common/matrix_kbd.c **** 			     Matrix->output, Matrix->ScancodeTable, Matrix->ScancodeShiftTable);
 175:common/matrix_kbd.c **** 				 
 176:common/matrix_kbd.c **** 			return;
 177:common/matrix_kbd.c **** 		}
 178:common/matrix_kbd.c **** 	}
 179:common/matrix_kbd.c **** 		
 180:common/matrix_kbd.c **** 	// Check for a waiting scancode
 181:common/matrix_kbd.c **** 	Scancode=ps2_kbd_get_scancode();
 498               		.loc 1 181 0 is_stmt 1
 499 0232 0E94 0000 		call ps2_kbd_get_scancode
 500 0236 C82F      		mov r28,r24
 182:common/matrix_kbd.c **** 	
 183:common/matrix_kbd.c **** 	// If it's a valid scancode process it
 184:common/matrix_kbd.c **** 	if(Scancode!=0)
 501               		.loc 1 184 0
 502 0238 8823      		tst r24
 503 023a 01F4      		brne .+2
 504 023c 00C0      		rjmp .L39
 185:common/matrix_kbd.c **** 	{
 186:common/matrix_kbd.c ****         //logv0("%2X ",Scancode);
 187:common/matrix_kbd.c **** 		//if(Scancode!=LastScanCode)
 188:common/matrix_kbd.c ****         //    logv0("Last:%2.2X Scan:%2.2X Prefix:%2.2X Count=%d\n",LastScanCode,Scancode,PrefixCod
 189:common/matrix_kbd.c **** 	
 190:common/matrix_kbd.c **** 		if (CodeCount>0)
 505               		.loc 1 190 0
 506 023e 8091 0000 		lds r24,CodeCount
 507 0242 8823      		tst r24
 508 0244 01F0      		breq .L47
 191:common/matrix_kbd.c **** 		{
 192:common/matrix_kbd.c ****         	CodeCount--;
 509               		.loc 1 192 0
 510 0246 8150      		subi r24,lo8(-(-1))
 511 0248 8093 0000 		sts CodeCount,r24
 193:common/matrix_kbd.c **** 			if(CodeCount==0)
 512               		.loc 1 193 0
 513 024c 8111      		cpse r24,__zero_reg__
 514 024e 00C0      		rjmp .L39
 194:common/matrix_kbd.c **** 			{
 195:common/matrix_kbd.c **** 				if(PrefixCode==SCAN_CODE_BESCAPE)
 515               		.loc 1 195 0
 516 0250 8091 0000 		lds r24,PrefixCode
 517 0254 813E      		cpi r24,lo8(-31)
 518 0256 01F4      		brne .L48
 196:common/matrix_kbd.c **** 				{
 197:common/matrix_kbd.c **** 					ResetMachine();
 519               		.loc 1 197 0
 520 0258 0E94 0000 		call ResetMachine
 521               	.L48:
 198:common/matrix_kbd.c **** 				}
 199:common/matrix_kbd.c **** 				LastScanCode=0;
 522               		.loc 1 199 0
 523 025c 1092 0000 		sts LastScanCode,__zero_reg__
 200:common/matrix_kbd.c **** 				PrefixCode=0;
 524               		.loc 1 200 0
 525 0260 1092 0000 		sts PrefixCode,__zero_reg__
 526 0264 00C0      		rjmp .L39
 527               	.L47:
 201:common/matrix_kbd.c **** 			}
 202:common/matrix_kbd.c **** 		}
 203:common/matrix_kbd.c **** 		else
 204:common/matrix_kbd.c **** 		{
 205:common/matrix_kbd.c **** 			switch (Scancode)
 528               		.loc 1 205 0
 529 0266 C837      		cpi r28,lo8(120)
 530 0268 01F0      		breq .L50
 531 026a 00F4      		brsh .L51
 532 026c C730      		cpi r28,lo8(7)
 533 026e 01F0      		breq .L52
 534 0270 00C0      		rjmp .L49
 535               	.L51:
 536 0272 C03E      		cpi r28,lo8(-32)
 537 0274 01F0      		breq .L53
 538 0276 C13E      		cpi r28,lo8(-31)
 539 0278 01F4      		brne .L49
 206:common/matrix_kbd.c **** 			{
 207:common/matrix_kbd.c ****                 // Check for various escape scancodes and set prefix as needed
 208:common/matrix_kbd.c **** 				case SCAN_CODE_ESCAPE :
 209:common/matrix_kbd.c **** 					PrefixCode=SCAN_CODE_ESCAPE;
 210:common/matrix_kbd.c **** 					break;
 211:common/matrix_kbd.c **** 			
 212:common/matrix_kbd.c **** 				// Break key ignore scan codes
 213:common/matrix_kbd.c **** 				case SCAN_CODE_BESCAPE :
 214:common/matrix_kbd.c **** 					PrefixCode=SCAN_CODE_BESCAPE;
 540               		.loc 1 214 0
 541 027a 81EE      		ldi r24,lo8(-31)
 542 027c 8093 0000 		sts PrefixCode,r24
 215:common/matrix_kbd.c **** 					CodeCount=BREAK_SEQUENCE_LEN-1;
 543               		.loc 1 215 0
 544 0280 87E0      		ldi r24,lo8(7)
 545 0282 8093 0000 		sts CodeCount,r24
 216:common/matrix_kbd.c **** 					break;
 546               		.loc 1 216 0
 547 0286 00C0      		rjmp .L55
 548               	.L53:
 209:common/matrix_kbd.c **** 					break;
 549               		.loc 1 209 0
 550 0288 C093 0000 		sts PrefixCode,r28
 210:common/matrix_kbd.c **** 			
 551               		.loc 1 210 0
 552 028c 00C0      		rjmp .L55
 553               	.L52:
 217:common/matrix_kbd.c **** 								
 218:common/matrix_kbd.c **** 				case SCAN_CODE_F12 :
 219:common/matrix_kbd.c **** 					if(LastScanCode!=SCAN_CODE_RELEASE)
 554               		.loc 1 219 0
 555 028e 8091 0000 		lds r24,LastScanCode
 556 0292 803F      		cpi r24,lo8(-16)
 557 0294 01F0      		breq .L55
 220:common/matrix_kbd.c **** 						ResetMachine();	// Atomulator compatibility.
 558               		.loc 1 220 0
 559 0296 0E94 0000 		call ResetMachine
 560 029a 00C0      		rjmp .L55
 561               	.L50:
 221:common/matrix_kbd.c **** 					break;
 222:common/matrix_kbd.c **** 				
 223:common/matrix_kbd.c **** 				case SCAN_CODE_F11 :
 224:common/matrix_kbd.c **** 					asm("jmp 0x0000");	// Soft Reset AVR
 562               		.loc 1 224 0
 563               	/* #APP */
 564               	 ;  224 "common/matrix_kbd.c" 1
 565 029c 0C94 0000 		jmp 0x0000
 566               	 ;  0 "" 2
 225:common/matrix_kbd.c **** 					break;
 567               		.loc 1 225 0
 568               	/* #NOAPP */
 569 02a0 00C0      		rjmp .L55
 570               	.L49:
 226:common/matrix_kbd.c **** 				
 227:common/matrix_kbd.c **** 				default: 
 228:common/matrix_kbd.c **** 					if(Scancode<=MAX_SCANCODE)
 571               		.loc 1 228 0
 572 02a2 C438      		cpi r28,lo8(-124)
 573 02a4 00F4      		brsh .L55
 229:common/matrix_kbd.c **** 					{
 230:common/matrix_kbd.c **** 						// 2021-01-15, do callback processing first, then callback can 
 231:common/matrix_kbd.c **** 						// override table.
 232:common/matrix_kbd.c **** 						if(Matrix->callback!=NULL)
 574               		.loc 1 232 0
 575 02a6 E091 0000 		lds r30,Matrix
 576 02aa F091 0000 		lds r31,Matrix+1
 577 02ae 0280      		ldd __tmp_reg__,Z+2
 578 02b0 F381      		ldd r31,Z+3
 579 02b2 E02D      		mov r30,__tmp_reg__
 580 02b4 3097      		sbiw r30,0
 581 02b6 01F4      		brne .L56
 582               	.L61:
 233:common/matrix_kbd.c **** 						{
 234:common/matrix_kbd.c **** 							if(LastScanCode!=SCAN_CODE_RELEASE)
 235:common/matrix_kbd.c **** 								KeyValid=Matrix->callback(PrefixCode,Scancode,KEY_DOWN);
 236:common/matrix_kbd.c **** 							else
 237:common/matrix_kbd.c **** 								KeyValid=Matrix->callback(PrefixCode,Scancode,KEY_UP);
 238:common/matrix_kbd.c **** 						}
 239:common/matrix_kbd.c **** 
 240:common/matrix_kbd.c **** 						if(!KeyValid)
 241:common/matrix_kbd.c **** 						{
 242:common/matrix_kbd.c **** 							// Lookup normal unshifted keys
 243:common/matrix_kbd.c **** 							IsShift=0;
 244:common/matrix_kbd.c **** 							KeyValid=LookupKeys(Scancode,IsShift);
 583               		.loc 1 244 0
 584 02b8 60E0      		ldi r22,0
 585 02ba 8C2F      		mov r24,r28
 586 02bc 0E94 0000 		call LookupKeys
 245:common/matrix_kbd.c **** 						
 246:common/matrix_kbd.c **** 							// If key was not found then try the shifted table
 247:common/matrix_kbd.c **** 							if (!KeyValid)
 587               		.loc 1 247 0
 588 02c0 8111      		cpse r24,__zero_reg__
 589 02c2 00C0      		rjmp .L62
 248:common/matrix_kbd.c **** 							{
 249:common/matrix_kbd.c **** 								IsShift=1;
 250:common/matrix_kbd.c **** 								KeyValid=LookupKeys(Scancode,IsShift);
 590               		.loc 1 250 0
 591 02c4 61E0      		ldi r22,lo8(1)
 592 02c6 8C2F      		mov r24,r28
 593 02c8 0E94 0000 		call LookupKeys
 594 02cc 00C0      		rjmp .L62
 595               	.L56:
 234:common/matrix_kbd.c **** 								KeyValid=Matrix->callback(PrefixCode,Scancode,KEY_DOWN);
 596               		.loc 1 234 0
 597 02ce 8091 0000 		lds r24,LastScanCode
 598 02d2 803F      		cpi r24,lo8(-16)
 599 02d4 01F0      		breq .L59
 235:common/matrix_kbd.c **** 							else
 600               		.loc 1 235 0
 601 02d6 41E0      		ldi r20,lo8(1)
 602 02d8 00C0      		rjmp .L84
 603               	.L59:
 237:common/matrix_kbd.c **** 						}
 604               		.loc 1 237 0
 605 02da 40E0      		ldi r20,0
 606               	.L84:
 607 02dc 6C2F      		mov r22,r28
 608 02de 8091 0000 		lds r24,PrefixCode
 609 02e2 0995      		icall
 240:common/matrix_kbd.c **** 						{
 610               		.loc 1 240 0
 611 02e4 8823      		tst r24
 612 02e6 01F0      		breq .L61
 613               	.L62:
 251:common/matrix_kbd.c **** 							}
 252:common/matrix_kbd.c **** 						}	
 253:common/matrix_kbd.c **** 							
 254:common/matrix_kbd.c **** 						PrefixCode=SCAN_CODE_NO_PREFIX;
 614               		.loc 1 254 0
 615 02e8 1092 0000 		sts PrefixCode,__zero_reg__
 616               	.L55:
 255:common/matrix_kbd.c **** 					}
 256:common/matrix_kbd.c **** 					break;
 257:common/matrix_kbd.c **** 			}
 258:common/matrix_kbd.c **** 			// Update last scancode
 259:common/matrix_kbd.c **** 			LastScanCode=Scancode;
 617               		.loc 1 259 0
 618 02ec C093 0000 		sts LastScanCode,r28
 619               	.L39:
 620               	/* epilogue start */
 260:common/matrix_kbd.c **** 		}
 261:common/matrix_kbd.c **** 	}
 262:common/matrix_kbd.c **** }	
 621               		.loc 1 262 0
 622 02f0 CF91      		pop r28
 623 02f2 0895      		ret
 624               		.cfi_endproc
 625               	.LFE10:
 627               	.global	check_matrix
 629               	check_matrix:
 630               	.LFB11:
 263:common/matrix_kbd.c **** 
 264:common/matrix_kbd.c **** // Display a representation of the matrix codes that are present in the
 265:common/matrix_kbd.c **** // scancode to matrix tables. This can be used to spot gaps in the matrix
 266:common/matrix_kbd.c **** // where no PS/2 code encodes to that matrix position.
 267:common/matrix_kbd.c **** void check_matrix(void)
 268:common/matrix_kbd.c **** {
 631               		.loc 1 268 0
 632               		.cfi_startproc
 633 02f4 2F92      		push r2
 634               	.LCFI48:
 635               		.cfi_def_cfa_offset 3
 636               		.cfi_offset 2, -2
 637 02f6 3F92      		push r3
 638               	.LCFI49:
 639               		.cfi_def_cfa_offset 4
 640               		.cfi_offset 3, -3
 641 02f8 4F92      		push r4
 642               	.LCFI50:
 643               		.cfi_def_cfa_offset 5
 644               		.cfi_offset 4, -4
 645 02fa 5F92      		push r5
 646               	.LCFI51:
 647               		.cfi_def_cfa_offset 6
 648               		.cfi_offset 5, -5
 649 02fc 6F92      		push r6
 650               	.LCFI52:
 651               		.cfi_def_cfa_offset 7
 652               		.cfi_offset 6, -6
 653 02fe 7F92      		push r7
 654               	.LCFI53:
 655               		.cfi_def_cfa_offset 8
 656               		.cfi_offset 7, -7
 657 0300 8F92      		push r8
 658               	.LCFI54:
 659               		.cfi_def_cfa_offset 9
 660               		.cfi_offset 8, -8
 661 0302 9F92      		push r9
 662               	.LCFI55:
 663               		.cfi_def_cfa_offset 10
 664               		.cfi_offset 9, -9
 665 0304 AF92      		push r10
 666               	.LCFI56:
 667               		.cfi_def_cfa_offset 11
 668               		.cfi_offset 10, -10
 669 0306 BF92      		push r11
 670               	.LCFI57:
 671               		.cfi_def_cfa_offset 12
 672               		.cfi_offset 11, -11
 673 0308 CF92      		push r12
 674               	.LCFI58:
 675               		.cfi_def_cfa_offset 13
 676               		.cfi_offset 12, -12
 677 030a DF92      		push r13
 678               	.LCFI59:
 679               		.cfi_def_cfa_offset 14
 680               		.cfi_offset 13, -13
 681 030c EF92      		push r14
 682               	.LCFI60:
 683               		.cfi_def_cfa_offset 15
 684               		.cfi_offset 14, -14
 685 030e FF92      		push r15
 686               	.LCFI61:
 687               		.cfi_def_cfa_offset 16
 688               		.cfi_offset 15, -15
 689 0310 0F93      		push r16
 690               	.LCFI62:
 691               		.cfi_def_cfa_offset 17
 692               		.cfi_offset 16, -16
 693 0312 1F93      		push r17
 694               	.LCFI63:
 695               		.cfi_def_cfa_offset 18
 696               		.cfi_offset 17, -17
 697 0314 CF93      		push r28
 698               	.LCFI64:
 699               		.cfi_def_cfa_offset 19
 700               		.cfi_offset 28, -18
 701 0316 DF93      		push r29
 702               	.LCFI65:
 703               		.cfi_def_cfa_offset 20
 704               		.cfi_offset 29, -19
 705 0318 CDB7      		in r28,__SP_L__
 706 031a DEB7      		in r29,__SP_H__
 707               	.LCFI66:
 708               		.cfi_def_cfa_register 28
 709 031c 6097      		sbiw r28,16
 710               	.LCFI67:
 711               		.cfi_def_cfa_offset 36
 712 031e 0FB6      		in __tmp_reg__,__SREG__
 713 0320 F894      		cli
 714 0322 DEBF      		out __SP_H__,r29
 715 0324 0FBE      		out __SREG__,__tmp_reg__
 716 0326 CDBF      		out __SP_L__,r28
 717               	/* prologue: function */
 718               	/* frame size = 16 */
 719               	/* stack size = 34 */
 720               	.L__stack_usage = 34
 721               	.LVL0:
 269:common/matrix_kbd.c **** 	uint16_t	Check[MAX_ROW+1];
 270:common/matrix_kbd.c **** 	int8_t		Row;
 271:common/matrix_kbd.c **** 	int8_t		Col;
 272:common/matrix_kbd.c **** 	uint16_t	Offset 	= 0;
 273:common/matrix_kbd.c **** 	uint8_t		*Table;
 274:common/matrix_kbd.c **** 	uint8_t		Prefix;
 275:common/matrix_kbd.c **** 	uint8_t		Code;	
 276:common/matrix_kbd.c **** 	uint8_t		MatrixCode;	
 277:common/matrix_kbd.c **** 	uint8_t		Pass;
 278:common/matrix_kbd.c **** 	uint8_t		OutCh;
 279:common/matrix_kbd.c **** 
 280:common/matrix_kbd.c **** 	// Clear array to hold matrix code presence flags
 281:common/matrix_kbd.c **** 	memset(Check,0x00,sizeof(Check));
 722               		.loc 1 281 0
 723 0328 8E01      		movw r16,r28
 724 032a 0F5F      		subi r16,-1
 725 032c 1F4F      		sbci r17,-1
 726 032e 80E1      		ldi r24,lo8(16)
 727 0330 F801      		movw r30,r16
 728               		0:
 729 0332 1192      		st Z+,__zero_reg__
 730 0334 8A95      		dec r24
 731 0336 01F4      		brne 0b
 732               	.LVL1:
 282:common/matrix_kbd.c **** 
 283:common/matrix_kbd.c **** 	// Make a pass over both the ScanCode table and the ShiftScan code table
 284:common/matrix_kbd.c **** 	for(Pass=0 ; Pass < 1; Pass++)
 285:common/matrix_kbd.c **** 	{
 286:common/matrix_kbd.c **** 		// Select table.
 287:common/matrix_kbd.c **** 		if (0 == Pass)
 288:common/matrix_kbd.c **** 			Table  = Matrix->ScancodeTable;
 733               		.loc 1 288 0
 734 0338 E091 0000 		lds r30,Matrix
 735 033c F091 0000 		lds r31,Matrix+1
 736 0340 8481      		ldd r24,Z+4
 737 0342 9581      		ldd r25,Z+5
 289:common/matrix_kbd.c **** 		else
 290:common/matrix_kbd.c **** 			Table  = Matrix->ScancodeShiftTable;
 291:common/matrix_kbd.c **** 		
 292:common/matrix_kbd.c **** 		// Start at the beginning :)
 293:common/matrix_kbd.c **** 		Offset = 0;
 294:common/matrix_kbd.c **** 		Prefix = 0;
 295:common/matrix_kbd.c **** 		
 296:common/matrix_kbd.c **** 		// Check each ScanCodeTable entry's matrix code, and set the bit in the check
 297:common/matrix_kbd.c **** 		// array corresponding to the matrix code
 298:common/matrix_kbd.c **** 		while(Prefix!=SCAN_CODE_TERMINATE) 
 299:common/matrix_kbd.c **** 		{
 300:common/matrix_kbd.c **** 			Prefix 		= pgm_read_byte(&Table[Offset++]);
 301:common/matrix_kbd.c **** 			Code		= pgm_read_byte(&Table[Offset++]);
 302:common/matrix_kbd.c **** 			MatrixCode	= pgm_read_byte(&Table[Offset++]);
 303:common/matrix_kbd.c **** 	
 304:common/matrix_kbd.c **** 			if(Prefix!=SCAN_CODE_TERMINATE)
 305:common/matrix_kbd.c **** 				Check[GetRow(MatrixCode)] |= (1 << GetCol(MatrixCode));
 738               		.loc 1 305 0
 739 0344 21E0      		ldi r18,lo8(1)
 740 0346 30E0      		ldi r19,0
 741               	.LVL2:
 742               	.L87:
 743               	.LBB8:
 300:common/matrix_kbd.c **** 			Code		= pgm_read_byte(&Table[Offset++]);
 744               		.loc 1 300 0
 745 0348 FC01      		movw r30,r24
 746               	/* #APP */
 747               	 ;  300 "common/matrix_kbd.c" 1
 748 034a 4491      		lpm r20, Z
 749               		
 750               	 ;  0 "" 2
 751               	.LVL3:
 752               	/* #NOAPP */
 753               	.LBE8:
 754               	.LBB9:
 301:common/matrix_kbd.c **** 			MatrixCode	= pgm_read_byte(&Table[Offset++]);
 755               		.loc 1 301 0
 756 034c 3196      		adiw r30,1
 757               	.LVL4:
 758               	/* #APP */
 759               	 ;  301 "common/matrix_kbd.c" 1
 760 034e E491      		lpm r30, Z
 761               		
 762               	 ;  0 "" 2
 763               	.LVL5:
 764               	/* #NOAPP */
 765               	.LBE9:
 766               	.LBB10:
 302:common/matrix_kbd.c **** 	
 767               		.loc 1 302 0
 768 0350 FC01      		movw r30,r24
 769 0352 3296      		adiw r30,2
 770               	.LVL6:
 771               	/* #APP */
 772               	 ;  302 "common/matrix_kbd.c" 1
 773 0354 E491      		lpm r30, Z
 774               		
 775               	 ;  0 "" 2
 776               	.LVL7:
 777               	/* #NOAPP */
 778 0356 0396      		adiw r24,3
 779               	.LVL8:
 780               	.LBE10:
 304:common/matrix_kbd.c **** 				Check[GetRow(MatrixCode)] |= (1 << GetCol(MatrixCode));
 781               		.loc 1 304 0
 782 0358 4F3F      		cpi r20,lo8(-1)
 783 035a 01F0      		breq .L86
 784               		.loc 1 305 0
 785 035c AE2F      		mov r26,r30
 786 035e A077      		andi r26,lo8(112)
 787 0360 B0E0      		ldi r27,0
 788 0362 F3E0      		ldi r31,3
 789               		1:
 790 0364 B695      		lsr r27
 791 0366 A795      		ror r26
 792 0368 FA95      		dec r31
 793 036a 01F4      		brne 1b
 794 036c A00F      		add r26,r16
 795 036e B11F      		adc r27,r17
 796 0370 EF70      		andi r30,lo8(15)
 797               	.LVL9:
 798 0372 B901      		movw r22,r18
 799 0374 00C0      		rjmp 2f
 800               		1:
 801 0376 660F      		lsl r22
 802 0378 771F      		rol r23
 803               		2:
 804 037a EA95      		dec r30
 805 037c 02F4      		brpl 1b
 806 037e 4D91      		ld r20,X+
 807 0380 5C91      		ld r21,X
 808 0382 1197      		sbiw r26,1
 809               	.LVL10:
 810 0384 462B      		or r20,r22
 811 0386 572B      		or r21,r23
 812 0388 4D93      		st X+,r20
 813 038a 5C93      		st X,r21
 814 038c 00C0      		rjmp .L87
 815               	.LVL11:
 816               	.L86:
 306:common/matrix_kbd.c **** 		}
 307:common/matrix_kbd.c **** 	}
 308:common/matrix_kbd.c **** 
 309:common/matrix_kbd.c **** 	// Display column titles
 310:common/matrix_kbd.c **** 	logv0("ColNo    ");
 817               		.loc 1 310 0
 818 038e 8091 0000 		lds r24,STATUS_VERBOSE
 819               	.LVL12:
 820 0392 8823      		tst r24
 821 0394 01F0      		breq .L98
 822               		.loc 1 310 0 is_stmt 0 discriminator 1
 823 0396 80E0      		ldi r24,lo8(__c.2396)
 824 0398 90E0      		ldi r25,hi8(__c.2396)
 825 039a 9F93      		push r25
 826               	.LVL13:
 827 039c 8F93      		push r24
 828 039e 80E0      		ldi r24,lo8(ser0stream)
 829 03a0 90E0      		ldi r25,hi8(ser0stream)
 830 03a2 9F93      		push r25
 831 03a4 8F93      		push r24
 832 03a6 0E94 0000 		call fprintf_P
 833               	.LVL14:
 834 03aa 0F90      		pop __tmp_reg__
 835 03ac 0F90      		pop __tmp_reg__
 836 03ae 0F90      		pop __tmp_reg__
 837 03b0 0F90      		pop __tmp_reg__
 838               	.L98:
 839               	.LVL15:
 268:common/matrix_kbd.c **** 	uint16_t	Check[MAX_ROW+1];
 840               		.loc 1 268 0 is_stmt 1 discriminator 1
 841 03b2 6FE0      		ldi r22,lo8(15)
 842 03b4 E62E      		mov r14,r22
 843 03b6 F12C      		mov r15,__zero_reg__
 311:common/matrix_kbd.c **** 	for(Col = MAX_COL; Col>-1; Col--)
 312:common/matrix_kbd.c **** 		logv0(" %02X",Col);
 844               		.loc 1 312 0 discriminator 1
 845 03b8 70E0      		ldi r23,lo8(__c.2398)
 846 03ba C72E      		mov r12,r23
 847 03bc 70E0      		ldi r23,hi8(__c.2398)
 848 03be D72E      		mov r13,r23
 849 03c0 E0E0      		ldi r30,lo8(ser0stream)
 850 03c2 AE2E      		mov r10,r30
 851 03c4 E0E0      		ldi r30,hi8(ser0stream)
 852 03c6 BE2E      		mov r11,r30
 853               	.LVL16:
 854               	.L89:
 855               		.loc 1 312 0 is_stmt 0
 856 03c8 8091 0000 		lds r24,STATUS_VERBOSE
 857 03cc 8823      		tst r24
 858 03ce 01F0      		breq .L88
 859               		.loc 1 312 0 discriminator 1
 860 03d0 FF92      		push r15
 861 03d2 EF92      		push r14
 862 03d4 DF92      		push r13
 863 03d6 CF92      		push r12
 864 03d8 BF92      		push r11
 865 03da AF92      		push r10
 866 03dc 0E94 0000 		call fprintf_P
 867               	.LVL17:
 868 03e0 0F90      		pop __tmp_reg__
 869 03e2 0F90      		pop __tmp_reg__
 870 03e4 0F90      		pop __tmp_reg__
 871 03e6 0F90      		pop __tmp_reg__
 872 03e8 0F90      		pop __tmp_reg__
 873 03ea 0F90      		pop __tmp_reg__
 874               	.L88:
 875               	.LVL18:
 876               	.LVL19:
 877 03ec F1E0      		ldi r31,1
 878 03ee EF1A      		sub r14,r31
 879 03f0 F108      		sbc r15,__zero_reg__
 880 03f2 00F4      		brcc .L89
 313:common/matrix_kbd.c **** 	
 314:common/matrix_kbd.c **** 	logv0("\n");
 881               		.loc 1 314 0 is_stmt 1
 882 03f4 8091 0000 		lds r24,STATUS_VERBOSE
 883 03f8 8823      		tst r24
 884 03fa 01F0      		breq .L90
 885               		.loc 1 314 0 is_stmt 0 discriminator 1
 886 03fc 80E0      		ldi r24,lo8(__c.2403)
 887 03fe 90E0      		ldi r25,hi8(__c.2403)
 888 0400 9F93      		push r25
 889 0402 8F93      		push r24
 890 0404 80E0      		ldi r24,lo8(ser0stream)
 891 0406 90E0      		ldi r25,hi8(ser0stream)
 892 0408 9F93      		push r25
 893 040a 8F93      		push r24
 894 040c 0E94 0000 		call fprintf_P
 895               	.LVL20:
 896 0410 0F90      		pop __tmp_reg__
 897 0412 0F90      		pop __tmp_reg__
 898 0414 0F90      		pop __tmp_reg__
 899 0416 0F90      		pop __tmp_reg__
 900               	.L90:
 901               	.LVL21:
 268:common/matrix_kbd.c **** 	uint16_t	Check[MAX_ROW+1];
 902               		.loc 1 268 0 is_stmt 1 discriminator 1
 903 0418 C12C      		mov r12,__zero_reg__
 904 041a D12C      		mov r13,__zero_reg__
 315:common/matrix_kbd.c **** 	
 316:common/matrix_kbd.c **** 	// Extract each bit from the chek array and display it.
 317:common/matrix_kbd.c **** 	for(Row = 0; Row < MAX_ROW; Row++)
 318:common/matrix_kbd.c **** 	{
 319:common/matrix_kbd.c **** 		logv0("Row[%d]: ",Row);
 905               		.loc 1 319 0 discriminator 1
 906 041c 90E0      		ldi r25,lo8(__c.2405)
 907 041e 292E      		mov r2,r25
 908 0420 90E0      		ldi r25,hi8(__c.2405)
 909 0422 392E      		mov r3,r25
 910 0424 20E0      		ldi r18,lo8(ser0stream)
 911 0426 E22E      		mov r14,r18
 912 0428 20E0      		ldi r18,hi8(ser0stream)
 913 042a F22E      		mov r15,r18
 914               	.LVL22:
 320:common/matrix_kbd.c **** 		for(Col = MAX_COL; Col>-1; Col--)
 321:common/matrix_kbd.c **** 		{
 322:common/matrix_kbd.c **** 			OutCh=(Check[Row] & (1<<Col)) ? '1' : '0';
 915               		.loc 1 322 0 discriminator 1
 916 042c 4424      		clr r4
 917 042e 4394      		inc r4
 918 0430 512C      		mov r5,__zero_reg__
 323:common/matrix_kbd.c **** 			logv0("  %c",OutCh);
 919               		.loc 1 323 0 discriminator 1
 920 0432 40E0      		ldi r20,lo8(__c.2407)
 921 0434 642E      		mov r6,r20
 922 0436 40E0      		ldi r20,hi8(__c.2407)
 923 0438 742E      		mov r7,r20
 324:common/matrix_kbd.c **** 		}
 325:common/matrix_kbd.c **** 		logv0("\n");
 924               		.loc 1 325 0 discriminator 1
 925 043a 50E0      		ldi r21,lo8(__c.2412)
 926 043c 852E      		mov r8,r21
 927 043e 50E0      		ldi r21,hi8(__c.2412)
 928 0440 952E      		mov r9,r21
 929               	.LVL23:
 930               	.L96:
 319:common/matrix_kbd.c **** 		for(Col = MAX_COL; Col>-1; Col--)
 931               		.loc 1 319 0
 932 0442 8091 0000 		lds r24,STATUS_VERBOSE
 933 0446 8823      		tst r24
 934 0448 01F0      		breq .L91
 319:common/matrix_kbd.c **** 		for(Col = MAX_COL; Col>-1; Col--)
 935               		.loc 1 319 0 is_stmt 0 discriminator 1
 936 044a DF92      		push r13
 937 044c CF92      		push r12
 938 044e 3F92      		push r3
 939 0450 2F92      		push r2
 940 0452 FF92      		push r15
 941 0454 EF92      		push r14
 942 0456 0E94 0000 		call fprintf_P
 943               	.LVL24:
 944 045a 0F90      		pop __tmp_reg__
 945 045c 0F90      		pop __tmp_reg__
 946 045e 0F90      		pop __tmp_reg__
 947 0460 0F90      		pop __tmp_reg__
 948 0462 0F90      		pop __tmp_reg__
 949 0464 0F90      		pop __tmp_reg__
 950               	.L91:
 951               	.LVL25:
 268:common/matrix_kbd.c **** 	uint16_t	Check[MAX_ROW+1];
 952               		.loc 1 268 0 is_stmt 1 discriminator 1
 953 0466 8FE0      		ldi r24,lo8(15)
 954 0468 A82E      		mov r10,r24
 955 046a B12C      		mov r11,__zero_reg__
 956               	.LVL26:
 957               	.L94:
 322:common/matrix_kbd.c **** 			logv0("  %c",OutCh);
 958               		.loc 1 322 0
 959 046c F801      		movw r30,r16
 960 046e 8081      		ld r24,Z
 961 0470 9181      		ldd r25,Z+1
 962 0472 9201      		movw r18,r4
 963 0474 0A2C      		mov r0,r10
 964 0476 00C0      		rjmp 2f
 965               		1:
 966 0478 220F      		lsl r18
 967 047a 331F      		rol r19
 968               		2:
 969 047c 0A94      		dec r0
 970 047e 02F4      		brpl 1b
 971 0480 8223      		and r24,r18
 972 0482 9323      		and r25,r19
 973 0484 892B      		or r24,r25
 974 0486 01F4      		brne .L99
 975 0488 80E3      		ldi r24,lo8(48)
 976 048a 00C0      		rjmp .L92
 977               	.L99:
 978 048c 81E3      		ldi r24,lo8(49)
 979               	.L92:
 980               	.LVL27:
 323:common/matrix_kbd.c **** 		}
 981               		.loc 1 323 0 discriminator 4
 982 048e 9091 0000 		lds r25,STATUS_VERBOSE
 983 0492 9923      		tst r25
 984 0494 01F0      		breq .L93
 323:common/matrix_kbd.c **** 		}
 985               		.loc 1 323 0 is_stmt 0 discriminator 1
 986 0496 1F92      		push __zero_reg__
 987 0498 8F93      		push r24
 988 049a 7F92      		push r7
 989 049c 6F92      		push r6
 990 049e FF92      		push r15
 991 04a0 EF92      		push r14
 992 04a2 0E94 0000 		call fprintf_P
 993               	.LVL28:
 994 04a6 0F90      		pop __tmp_reg__
 995 04a8 0F90      		pop __tmp_reg__
 996 04aa 0F90      		pop __tmp_reg__
 997 04ac 0F90      		pop __tmp_reg__
 998 04ae 0F90      		pop __tmp_reg__
 999 04b0 0F90      		pop __tmp_reg__
 1000               	.L93:
 1001               	.LVL29:
 1002               	.LVL30:
 1003 04b2 F1E0      		ldi r31,1
 1004 04b4 AF1A      		sub r10,r31
 1005 04b6 B108      		sbc r11,__zero_reg__
 1006 04b8 00F4      		brcc .L94
 1007               		.loc 1 325 0 is_stmt 1
 1008 04ba 8091 0000 		lds r24,STATUS_VERBOSE
 1009 04be 8823      		tst r24
 1010 04c0 01F0      		breq .L95
 1011               		.loc 1 325 0 is_stmt 0 discriminator 1
 1012 04c2 9F92      		push r9
 1013 04c4 8F92      		push r8
 1014 04c6 FF92      		push r15
 1015 04c8 EF92      		push r14
 1016 04ca 0E94 0000 		call fprintf_P
 1017               	.LVL31:
 1018 04ce 0F90      		pop __tmp_reg__
 1019 04d0 0F90      		pop __tmp_reg__
 1020 04d2 0F90      		pop __tmp_reg__
 1021 04d4 0F90      		pop __tmp_reg__
 1022               	.L95:
 1023               	.LVL32:
 1024 04d6 EFEF      		ldi r30,-1
 1025 04d8 CE1A      		sub r12,r30
 1026 04da DE0A      		sbc r13,r30
 1027               	.LVL33:
 1028 04dc 0E5F      		subi r16,-2
 1029 04de 1F4F      		sbci r17,-1
 317:common/matrix_kbd.c **** 	{
 1030               		.loc 1 317 0 is_stmt 1 discriminator 2
 1031 04e0 F7E0      		ldi r31,7
 1032 04e2 CF16      		cp r12,r31
 1033 04e4 D104      		cpc r13,__zero_reg__
 1034 04e6 01F0      		breq .+2
 1035 04e8 00C0      		rjmp .L96
 1036               	/* epilogue start */
 326:common/matrix_kbd.c **** 	}
 327:common/matrix_kbd.c **** }...
 1037               		.loc 1 327 0
 1038 04ea 6096      		adiw r28,16
 1039 04ec 0FB6      		in __tmp_reg__,__SREG__
 1040 04ee F894      		cli
 1041 04f0 DEBF      		out __SP_H__,r29
 1042 04f2 0FBE      		out __SREG__,__tmp_reg__
 1043 04f4 CDBF      		out __SP_L__,r28
 1044 04f6 DF91      		pop r29
 1045 04f8 CF91      		pop r28
 1046 04fa 1F91      		pop r17
 1047 04fc 0F91      		pop r16
 1048 04fe FF90      		pop r15
 1049 0500 EF90      		pop r14
 1050 0502 DF90      		pop r13
 1051 0504 CF90      		pop r12
 1052               	.LVL34:
 1053 0506 BF90      		pop r11
 1054 0508 AF90      		pop r10
 1055               	.LVL35:
 1056 050a 9F90      		pop r9
 1057 050c 8F90      		pop r8
 1058 050e 7F90      		pop r7
 1059 0510 6F90      		pop r6
 1060 0512 5F90      		pop r5
 1061 0514 4F90      		pop r4
 1062 0516 3F90      		pop r3
 1063 0518 2F90      		pop r2
 1064 051a 0895      		ret
 1065               		.cfi_endproc
 1066               	.LFE11:
 1068               	.global	matrix_init
 1070               	matrix_init:
 1071               	.LFB8:
  55:common/matrix_kbd.c **** {
 1072               		.loc 1 55 0
 1073               		.cfi_startproc
 1074               	.LVL36:
 1075 051c CF93      		push r28
 1076               	.LCFI68:
 1077               		.cfi_def_cfa_offset 3
 1078               		.cfi_offset 28, -2
 1079 051e DF93      		push r29
 1080               	.LCFI69:
 1081               		.cfi_def_cfa_offset 4
 1082               		.cfi_offset 29, -3
 1083               	/* prologue: function */
 1084               	/* frame size = 0 */
 1085               	/* stack size = 2 */
 1086               	.L__stack_usage = 2
 1087 0520 EC01      		movw r28,r24
  56:common/matrix_kbd.c **** 	logv0("Keyboard matrix init\n");
 1088               		.loc 1 56 0
 1089 0522 8091 0000 		lds r24,STATUS_VERBOSE
 1090               	.LVL37:
 1091 0526 8823      		tst r24
 1092 0528 01F0      		breq .L120
  56:common/matrix_kbd.c **** 	logv0("Keyboard matrix init\n");
 1093               		.loc 1 56 0 is_stmt 0 discriminator 1
 1094 052a 80E0      		ldi r24,lo8(__c.2312)
 1095 052c 90E0      		ldi r25,hi8(__c.2312)
 1096 052e 9F93      		push r25
 1097               	.LCFI70:
 1098               		.cfi_def_cfa_offset 5
 1099 0530 8F93      		push r24
 1100               	.LCFI71:
 1101               		.cfi_def_cfa_offset 6
 1102 0532 80E0      		ldi r24,lo8(ser0stream)
 1103 0534 90E0      		ldi r25,hi8(ser0stream)
 1104 0536 9F93      		push r25
 1105               	.LCFI72:
 1106               		.cfi_def_cfa_offset 7
 1107 0538 8F93      		push r24
 1108               	.LCFI73:
 1109               		.cfi_def_cfa_offset 8
 1110 053a 0E94 0000 		call fprintf_P
 1111               	.LVL38:
 1112 053e 0F90      		pop __tmp_reg__
 1113 0540 0F90      		pop __tmp_reg__
 1114 0542 0F90      		pop __tmp_reg__
 1115 0544 0F90      		pop __tmp_reg__
 1116               	.LCFI74:
 1117               		.cfi_def_cfa_offset 4
 1118               	.L120:
  58:common/matrix_kbd.c **** 	LastScanCode=0x00;
 1119               		.loc 1 58 0 is_stmt 1
 1120 0546 1092 0000 		sts LastScanCode,__zero_reg__
  59:common/matrix_kbd.c **** 	PrefixCode=SCAN_CODE_NO_PREFIX;
 1121               		.loc 1 59 0
 1122 054a 1092 0000 		sts PrefixCode,__zero_reg__
  61:common/matrix_kbd.c **** 	Matrix=InitMatrix;
 1123               		.loc 1 61 0
 1124 054e D093 0000 		sts Matrix+1,r29
 1125 0552 C093 0000 		sts Matrix,r28
  64:common/matrix_kbd.c ****     CodeCount=0;
 1126               		.loc 1 64 0
 1127 0556 1092 0000 		sts CodeCount,__zero_reg__
  67:common/matrix_kbd.c **** 	if (DIPIsSet(DIPS4)) 
 1128               		.loc 1 67 0
 1129 055a 1C99      		sbic 0x3,4
 1130 055c 00C0      		rjmp .L119
 1131               	/* epilogue start */
  69:common/matrix_kbd.c **** }
 1132               		.loc 1 69 0
 1133 055e DF91      		pop r29
 1134 0560 CF91      		pop r28
 1135               	.LVL39:
  68:common/matrix_kbd.c **** 		check_matrix();
 1136               		.loc 1 68 0
 1137 0562 0C94 0000 		jmp check_matrix
 1138               	.LVL40:
 1139               	.L119:
 1140               	/* epilogue start */
  69:common/matrix_kbd.c **** }
 1141               		.loc 1 69 0
 1142 0566 DF91      		pop r29
 1143 0568 CF91      		pop r28
 1144               	.LVL41:
 1145 056a 0895      		ret
 1146               		.cfi_endproc
 1147               	.LFE8:
 1149               		.section	.progmem.data,"a",@progbits
 1152               	__c.2412:
 1153 0000 0A00      		.string	"\n"
 1156               	__c.2407:
 1157 0002 2020 2563 		.string	"  %c"
 1157      00
 1160               	__c.2405:
 1161 0007 526F 775B 		.string	"Row[%d]: "
 1161      2564 5D3A 
 1161      2000 
 1164               	__c.2403:
 1165 0011 0A00      		.string	"\n"
 1168               	__c.2398:
 1169 0013 2025 3032 		.string	" %02X"
 1169      5800 
 1172               	__c.2396:
 1173 0019 436F 6C4E 		.string	"ColNo    "
 1173      6F20 2020 
 1173      2000 
 1176               	__c.2336:
 1177 0023 4D61 7472 		.string	"MatrixCode=%02X\n"
 1177      6978 436F 
 1177      6465 3D25 
 1177      3032 580A 
 1177      00
 1180               	__c.2334:
 1181 0034 4C6F 6F6B 		.string	"LookupKeys(%02X,%d), Table=%05X\n"
 1181      7570 4B65 
 1181      7973 2825 
 1181      3032 582C 
 1181      2564 292C 
 1184               	__c.2360:
 1185 0055 4D61 7472 		.string	"Matrix->output=%d, Matrix->ScancodeTable=%d, Matrix->ScancodeShiftTable=%d"
 1185      6978 2D3E 
 1185      6F75 7470 
 1185      7574 3D25 
 1185      642C 204D 
 1188               	__c.2358:
 1189 00a0 4552 524F 		.string	"ERROR, matrix structure not correctly initialized!\n"
 1189      522C 206D 
 1189      6174 7269 
 1189      7820 7374 
 1189      7275 6374 
 1192               	__c.2356:
 1193 00d4 4552 524F 		.string	"ERROR, no matrix driver initialised, please initialise first with matrix_init()\n"
 1193      522C 206E 
 1193      6F20 6D61 
 1193      7472 6978 
 1193      2064 7269 
 1196               	__c.2312:
 1197 0125 4B65 7962 		.string	"Keyboard matrix init\n"
 1197      6F61 7264 
 1197      206D 6174 
 1197      7269 7820 
 1197      696E 6974 
 1198               		.local	Matrix
 1199               		.comm	Matrix,2,1
 1200               		.local	CodeCount
 1201               		.comm	CodeCount,1,1
 1202               		.local	PrefixCode
 1203               		.comm	PrefixCode,1,1
 1204               		.local	LastScanCode
 1205               		.comm	LastScanCode,1,1
 1206               		.text
 1207               	.Letext0:
 1208               		.file 2 "d:\\winavr\\avr\\include\\stdint.h"
 1209               		.file 3 "common/matrix_kbd.h"
 1210               		.file 4 "d:\\winavr\\avr\\include\\stdio.h"
 1211               		.file 5 "common/status.h"
DEFINED SYMBOLS
                            *ABS*:00000000 matrix_kbd.c
D:\cygwin64\tmp\ccy504du.s:2      *ABS*:0000003e __SP_H__
D:\cygwin64\tmp\ccy504du.s:3      *ABS*:0000003d __SP_L__
D:\cygwin64\tmp\ccy504du.s:4      *ABS*:0000003f __SREG__
D:\cygwin64\tmp\ccy504du.s:5      *ABS*:00000000 __tmp_reg__
D:\cygwin64\tmp\ccy504du.s:6      *ABS*:00000001 __zero_reg__
D:\cygwin64\tmp\ccy504du.s:11     .text:00000000 LookupKeys
                             .bss:00000000 Matrix
D:\cygwin64\tmp\ccy504du.s:1180   .progmem.data:00000034 __c.2334
D:\cygwin64\tmp\ccy504du.s:1176   .progmem.data:00000023 __c.2336
D:\cygwin64\tmp\ccy504du.s:1201   .bss:00000003 PrefixCode
D:\cygwin64\tmp\ccy504du.s:1203   .bss:00000004 LastScanCode
D:\cygwin64\tmp\ccy504du.s:344    .text:00000170 matrix_check_output
D:\cygwin64\tmp\ccy504du.s:1192   .progmem.data:000000d4 __c.2356
D:\cygwin64\tmp\ccy504du.s:1188   .progmem.data:000000a0 __c.2358
D:\cygwin64\tmp\ccy504du.s:1184   .progmem.data:00000055 __c.2360
D:\cygwin64\tmp\ccy504du.s:1199   .bss:00000002 CodeCount
D:\cygwin64\tmp\ccy504du.s:629    .text:000002f4 check_matrix
D:\cygwin64\tmp\ccy504du.s:1172   .progmem.data:00000019 __c.2396
D:\cygwin64\tmp\ccy504du.s:1168   .progmem.data:00000013 __c.2398
D:\cygwin64\tmp\ccy504du.s:1164   .progmem.data:00000011 __c.2403
D:\cygwin64\tmp\ccy504du.s:1160   .progmem.data:00000007 __c.2405
D:\cygwin64\tmp\ccy504du.s:1156   .progmem.data:00000002 __c.2407
D:\cygwin64\tmp\ccy504du.s:1152   .progmem.data:00000000 __c.2412
D:\cygwin64\tmp\ccy504du.s:1070   .text:0000051c matrix_init
D:\cygwin64\tmp\ccy504du.s:1196   .progmem.data:00000125 __c.2312

UNDEFINED SYMBOLS
STATUS_VERBOSE
ser0stream
fprintf_P
ResetMachine
ps2_kbd_get_scancode
__do_clear_bss
