   1               		.file	"status.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	cls
  12               	cls:
  13               	.LFB5:
  14               		.file 1 "common/status.c"
   1:common/status.c **** /*
   2:common/status.c **** 	Status.c
   3:common/status.c **** 	
   4:common/status.c **** 	Functions for logging program status to the serial port, to
   5:common/status.c **** 	be used for debugging pruposes etc.
   6:common/status.c **** 	
   7:common/status.c **** 	2008-03-21, P.Harvey-Smith.
   8:common/status.c **** 	
   9:common/status.c ****     if the symbol SERIAL_STATUS is not defined, the routines in
  10:common/status.c ****     this file compile to empty stubs, this allows us to save 
  11:common/status.c ****     codespace when not needed.
  12:common/status.c **** */
  13:common/status.c **** 
  14:common/status.c **** #include <avr/interrupt.h>
  15:common/status.c **** #include <stdio.h>
  16:common/status.c **** #include <ctype.h>
  17:common/status.c **** #include "terminalcodes.h"
  18:common/status.c **** #include "status.h"
  19:common/status.c **** 
  20:common/status.c **** #ifdef SERIAL_STATUS
  21:common/status.c **** 
  22:common/status.c **** static int StdioSerial_TxByte0(char DataByte, FILE *Stream);
  23:common/status.c **** static int StdioSerial_TxByte1(char DataByte, FILE *Stream);
  24:common/status.c **** 
  25:common/status.c **** uint8_t	STATUS_VERBOSE = 0;
  26:common/status.c **** 
  27:common/status.c **** FILE ser0stream = FDEV_SETUP_STREAM(StdioSerial_TxByte0,NULL,_FDEV_SETUP_WRITE);
  28:common/status.c **** FILE ser1stream = FDEV_SETUP_STREAM(StdioSerial_TxByte1,NULL,_FDEV_SETUP_WRITE);
  29:common/status.c **** 
  30:common/status.c **** const char CompileDateTime[] PROGMEM = "compiled at " __TIME__ " on " __DATE__ "\n";
  31:common/status.c **** 
  32:common/status.c **** void StdioSerial_TxByte(char DataByte, uint8_t	Port)
  33:common/status.c **** {
  34:common/status.c **** 	#ifdef COOKED_SERIAL	
  35:common/status.c **** 		if((DataByte=='\r') || (DataByte=='\n'))
  36:common/status.c **** 		{
  37:common/status.c **** 			if(Port==1)
  38:common/status.c **** 			{
  39:common/status.c **** 				Serial_TxByte1('\r');
  40:common/status.c **** 				Serial_TxByte1('\n');
  41:common/status.c **** 			}
  42:common/status.c **** 			else
  43:common/status.c **** 			{
  44:common/status.c **** 				Serial_TxByte0('\r');
  45:common/status.c **** 				Serial_TxByte0('\n');
  46:common/status.c **** 			}
  47:common/status.c **** 		}
  48:common/status.c **** 		else
  49:common/status.c **** 	#endif
  50:common/status.c **** 	
  51:common/status.c **** 	if(Port==1)
  52:common/status.c **** 		Serial_TxByte1(DataByte);
  53:common/status.c **** 	else
  54:common/status.c **** 		Serial_TxByte0(DataByte);
  55:common/status.c **** 	
  56:common/status.c **** }
  57:common/status.c **** 
  58:common/status.c **** int StdioSerial_TxByte0(char DataByte, FILE *Stream)
  59:common/status.c **** {
  60:common/status.c **** 	StdioSerial_TxByte(DataByte,0);
  61:common/status.c **** 	return 0;
  62:common/status.c **** }
  63:common/status.c **** 
  64:common/status.c **** int StdioSerial_TxByte1(char DataByte, FILE *Stream)
  65:common/status.c **** {
  66:common/status.c **** 	StdioSerial_TxByte(DataByte,1);
  67:common/status.c **** 	return 0;
  68:common/status.c **** }
  69:common/status.c **** 
  70:common/status.c **** void cls(uint8_t	Port)
  71:common/status.c **** {
  15               		.loc 1 71 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 9091 0000 		lds r25,STATUS_VERBOSE
  72:common/status.c **** 	if(Port==1)
  23               		.loc 1 72 0
  24 0004 8130      		cpi r24,lo8(1)
  25 0006 01F4      		brne .L2
  73:common/status.c **** 	{
  74:common/status.c **** 		logv1(ESC_ERASE_DISPLAY);
  26               		.loc 1 74 0
  27 0008 9923      		tst r25
  28 000a 01F0      		breq .L3
  29               		.loc 1 74 0 is_stmt 0 discriminator 1
  30 000c 80E0      		ldi r24,lo8(__c.2052)
  31 000e 90E0      		ldi r25,hi8(__c.2052)
  32               	.LVL1:
  33 0010 9F93      		push r25
  34               	.LCFI0:
  35               		.cfi_def_cfa_offset 3
  36 0012 8F93      		push r24
  37               	.LCFI1:
  38               		.cfi_def_cfa_offset 4
  39 0014 80E0      		ldi r24,lo8(ser0stream)
  40 0016 90E0      		ldi r25,hi8(ser0stream)
  41 0018 9F93      		push r25
  42               	.LCFI2:
  43               		.cfi_def_cfa_offset 5
  44 001a 8F93      		push r24
  45               	.LCFI3:
  46               		.cfi_def_cfa_offset 6
  47 001c 0E94 0000 		call fprintf_P
  48               	.LVL2:
  49 0020 0F90      		pop __tmp_reg__
  50 0022 0F90      		pop __tmp_reg__
  51 0024 0F90      		pop __tmp_reg__
  52 0026 0F90      		pop __tmp_reg__
  53               	.LCFI4:
  54               		.cfi_def_cfa_offset 2
  55               	.L3:
  75:common/status.c **** 		logv1(ESC_CURSOR_POS(0,0));
  56               		.loc 1 75 0 is_stmt 1
  57 0028 8091 0000 		lds r24,STATUS_VERBOSE
  58 002c 8823      		tst r24
  59 002e 01F0      		breq .L1
  60               	.LVL3:
  61               	.LBB28:
  62               	.LBB29:
  63 0030 80E0      		ldi r24,lo8(__c.2054)
  64 0032 90E0      		ldi r25,hi8(__c.2054)
  65 0034 00C0      		rjmp .L17
  66               	.LVL4:
  67               	.L2:
  68               	.LBE29:
  69               	.LBE28:
  76:common/status.c **** 	}
  77:common/status.c **** 	else
  78:common/status.c **** 	{
  79:common/status.c **** 		logv0(ESC_ERASE_DISPLAY);
  70               		.loc 1 79 0
  71 0036 9923      		tst r25
  72 0038 01F0      		breq .L6
  73               		.loc 1 79 0 is_stmt 0 discriminator 1
  74 003a 80E0      		ldi r24,lo8(__c.2056)
  75 003c 90E0      		ldi r25,hi8(__c.2056)
  76               	.LVL5:
  77 003e 9F93      		push r25
  78               	.LCFI5:
  79               		.cfi_def_cfa_offset 3
  80 0040 8F93      		push r24
  81               	.LCFI6:
  82               		.cfi_def_cfa_offset 4
  83 0042 80E0      		ldi r24,lo8(ser0stream)
  84 0044 90E0      		ldi r25,hi8(ser0stream)
  85 0046 9F93      		push r25
  86               	.LCFI7:
  87               		.cfi_def_cfa_offset 5
  88 0048 8F93      		push r24
  89               	.LCFI8:
  90               		.cfi_def_cfa_offset 6
  91 004a 0E94 0000 		call fprintf_P
  92               	.LVL6:
  93 004e 0F90      		pop __tmp_reg__
  94 0050 0F90      		pop __tmp_reg__
  95 0052 0F90      		pop __tmp_reg__
  96 0054 0F90      		pop __tmp_reg__
  97               	.LCFI9:
  98               		.cfi_def_cfa_offset 2
  99               	.L6:
  80:common/status.c **** 		logv0(ESC_CURSOR_POS(0,0));
 100               		.loc 1 80 0 is_stmt 1
 101 0056 8091 0000 		lds r24,STATUS_VERBOSE
 102 005a 8823      		tst r24
 103 005c 01F0      		breq .L1
 104               		.loc 1 80 0 is_stmt 0 discriminator 1
 105 005e 80E0      		ldi r24,lo8(__c.2058)
 106 0060 90E0      		ldi r25,hi8(__c.2058)
 107               	.L17:
 108 0062 9F93      		push r25
 109               	.LCFI10:
 110               		.cfi_def_cfa_offset 3
 111 0064 8F93      		push r24
 112               	.LCFI11:
 113               		.cfi_def_cfa_offset 4
 114 0066 80E0      		ldi r24,lo8(ser0stream)
 115 0068 90E0      		ldi r25,hi8(ser0stream)
 116 006a 9F93      		push r25
 117               	.LCFI12:
 118               		.cfi_def_cfa_offset 5
 119 006c 8F93      		push r24
 120               	.LCFI13:
 121               		.cfi_def_cfa_offset 6
 122 006e 0E94 0000 		call fprintf_P
 123               	.LVL7:
 124 0072 0F90      		pop __tmp_reg__
 125 0074 0F90      		pop __tmp_reg__
 126 0076 0F90      		pop __tmp_reg__
 127 0078 0F90      		pop __tmp_reg__
 128               	.LCFI14:
 129               		.cfi_def_cfa_offset 2
 130               	.L1:
 131 007a 0895      		ret
 132               		.cfi_endproc
 133               	.LFE5:
 135               	.global	USART_Init0
 137               	USART_Init0:
 138               	.LFB6:
  81:common/status.c **** 	}
  82:common/status.c **** }
  83:common/status.c **** 
  84:common/status.c **** void USART_Init0(const uint32_t BaudRate)
  85:common/status.c **** {
 139               		.loc 1 85 0 is_stmt 1
 140               		.cfi_startproc
 141               	.LVL8:
 142               	/* prologue: function */
 143               	/* frame size = 0 */
 144               	/* stack size = 0 */
 145               	.L__stack_usage = 0
 146 007c 9B01      		movw r18,r22
 147 007e AC01      		movw r20,r24
  86:common/status.c **** #ifdef UCSR0A
  87:common/status.c **** 	UCSR0A = 0;
 148               		.loc 1 87 0
 149 0080 1092 C000 		sts 192,__zero_reg__
  88:common/status.c **** 	UCSR0B = ((1 << RXEN0) | (1 << TXEN0));
 150               		.loc 1 88 0
 151 0084 88E1      		ldi r24,lo8(24)
 152 0086 8093 C100 		sts 193,r24
  89:common/status.c **** 	UCSR0C = ((1 << UCSZ01) | (1 << UCSZ00));
 153               		.loc 1 89 0
 154 008a 86E0      		ldi r24,lo8(6)
 155 008c 8093 C200 		sts 194,r24
  90:common/status.c **** 	
  91:common/status.c **** 	UBRR0  = SERIAL_UBBRVAL(BaudRate);
 156               		.loc 1 91 0
 157 0090 60E0      		ldi r22,0
 158 0092 74E8      		ldi r23,lo8(-124)
 159 0094 83E0      		ldi r24,lo8(3)
 160 0096 90E0      		ldi r25,0
 161               	.LVL9:
 162 0098 0E94 0000 		call __udivmodsi4
 163               	.LVL10:
 164 009c 2150      		subi r18,1
 165 009e 3109      		sbc r19,__zero_reg__
 166 00a0 3093 C500 		sts 196+1,r19
 167 00a4 2093 C400 		sts 196,r18
 168 00a8 0895      		ret
 169               		.cfi_endproc
 170               	.LFE6:
 172               	.global	USART_Init1
 174               	USART_Init1:
 175               	.LFB7:
  92:common/status.c **** #else
  93:common/status.c **** 	uint16_t	Baud;
  94:common/status.c **** 	
  95:common/status.c **** 	UCSRA = 0;
  96:common/status.c **** 	UCSRB = ((1 << RXEN)  | (1 << TXEN));
  97:common/status.c **** 	UCSRC = ((1<<URSEL) | (1 << UCSZ1) | (1 << UCSZ0));
  98:common/status.c **** 	
  99:common/status.c **** 	Baud  	= SERIAL_UBBRVAL(BaudRate);
 100:common/status.c **** 	UBRRH	= (Baud & 0x0F00) >> 8;
 101:common/status.c **** 	UBRRL	= (Baud & 0x00FF);
 102:common/status.c **** #endif
 103:common/status.c **** }
 104:common/status.c **** 
 105:common/status.c **** 
 106:common/status.c **** void USART_Init1(const uint32_t BaudRate)
 107:common/status.c **** {
 176               		.loc 1 107 0
 177               		.cfi_startproc
 178               	.LVL11:
 179               	/* prologue: function */
 180               	/* frame size = 0 */
 181               	/* stack size = 0 */
 182               	.L__stack_usage = 0
 183 00aa 0895      		ret
 184               		.cfi_endproc
 185               	.LFE7:
 187               	.global	Serial_TxByte0
 189               	Serial_TxByte0:
 190               	.LFB8:
 108:common/status.c **** #ifdef UCSR1A
 109:common/status.c **** 	UCSR1A = 0;
 110:common/status.c **** 	UCSR1B = ((1 << RXEN1) | (1 << TXEN1));
 111:common/status.c **** 	UCSR1C = ((1 << UCSZ11) | (1 << UCSZ10));
 112:common/status.c **** 	
 113:common/status.c **** 	UBRR1  = SERIAL_UBBRVAL(BaudRate);
 114:common/status.c **** #endif
 115:common/status.c **** }
 116:common/status.c **** 
 117:common/status.c **** /** Transmits a given byte through the USART.
 118:common/status.c ****  *
 119:common/status.c ****  *  \param DataByte  Byte to transmit through the USART
 120:common/status.c ****  */
 121:common/status.c **** void Serial_TxByte0(const char DataByte)
 122:common/status.c **** {
 191               		.loc 1 122 0
 192               		.cfi_startproc
 193               	/* prologue: function */
 194               	/* frame size = 0 */
 195               	/* stack size = 0 */
 196               	.L__stack_usage = 0
 197               	.LVL12:
 198               	.L22:
 123:common/status.c **** #ifdef UCSR0A
 124:common/status.c **** 	while ( !( UCSR0A & (1<<UDRE0)) )		;
 199               		.loc 1 124 0 discriminator 1
 200 00ac 9091 C000 		lds r25,192
 201 00b0 95FF      		sbrs r25,5
 202 00b2 00C0      		rjmp .L22
 125:common/status.c **** 	UDR0=DataByte;
 203               		.loc 1 125 0
 204 00b4 8093 C600 		sts 198,r24
 205 00b8 0895      		ret
 206               		.cfi_endproc
 207               	.LFE8:
 209               	.global	StdioSerial_TxByte
 211               	StdioSerial_TxByte:
 212               	.LFB2:
  33:common/status.c **** 	#ifdef COOKED_SERIAL	
 213               		.loc 1 33 0
 214               		.cfi_startproc
 215               	.LVL13:
 216               	/* prologue: function */
 217               	/* frame size = 0 */
 218               	/* stack size = 0 */
 219               	.L__stack_usage = 0
  35:common/status.c **** 		{
 220               		.loc 1 35 0
 221 00ba 8D30      		cpi r24,lo8(13)
 222 00bc 01F0      		breq .L26
  35:common/status.c **** 		{
 223               		.loc 1 35 0 is_stmt 0 discriminator 1
 224 00be 8A30      		cpi r24,lo8(10)
 225 00c0 01F4      		brne .L27
 226               	.L26:
  37:common/status.c **** 			{
 227               		.loc 1 37 0 is_stmt 1
 228 00c2 6130      		cpi r22,lo8(1)
 229 00c4 01F0      		breq .L25
 230               	.LVL14:
 231               	.LBB32:
 232               	.LBB33:
  44:common/status.c **** 				Serial_TxByte0('\n');
 233               		.loc 1 44 0
 234 00c6 8DE0      		ldi r24,lo8(13)
 235               	.LVL15:
 236 00c8 0E94 0000 		call Serial_TxByte0
 237               	.LVL16:
  45:common/status.c **** 			}
 238               		.loc 1 45 0
 239 00cc 8AE0      		ldi r24,lo8(10)
 240 00ce 00C0      		rjmp .L38
 241               	.LVL17:
 242               	.L27:
 243               	.LBE33:
 244               	.LBE32:
  51:common/status.c **** 		Serial_TxByte1(DataByte);
 245               		.loc 1 51 0
 246 00d0 6130      		cpi r22,lo8(1)
 247 00d2 01F0      		breq .L25
 248               	.LVL18:
 249               	.L38:
  54:common/status.c **** 	
 250               		.loc 1 54 0
 251 00d4 0C94 0000 		jmp Serial_TxByte0
 252               	.LVL19:
 253               	.L25:
 254 00d8 0895      		ret
 255               		.cfi_endproc
 256               	.LFE2:
 259               	StdioSerial_TxByte0:
 260               	.LFB3:
  59:common/status.c **** 	StdioSerial_TxByte(DataByte,0);
 261               		.loc 1 59 0
 262               		.cfi_startproc
 263               	.LVL20:
 264               	/* prologue: function */
 265               	/* frame size = 0 */
 266               	/* stack size = 0 */
 267               	.L__stack_usage = 0
  60:common/status.c **** 	return 0;
 268               		.loc 1 60 0
 269 00da 60E0      		ldi r22,0
 270               	.LVL21:
 271 00dc 0E94 0000 		call StdioSerial_TxByte
 272               	.LVL22:
  62:common/status.c **** 
 273               		.loc 1 62 0
 274 00e0 80E0      		ldi r24,0
 275 00e2 90E0      		ldi r25,0
 276 00e4 0895      		ret
 277               		.cfi_endproc
 278               	.LFE3:
 281               	StdioSerial_TxByte1:
 282               	.LFB4:
  65:common/status.c **** 	StdioSerial_TxByte(DataByte,1);
 283               		.loc 1 65 0
 284               		.cfi_startproc
 285               	.LVL23:
 286               	/* prologue: function */
 287               	/* frame size = 0 */
 288               	/* stack size = 0 */
 289               	.L__stack_usage = 0
  66:common/status.c **** 	return 0;
 290               		.loc 1 66 0
 291 00e6 61E0      		ldi r22,lo8(1)
 292               	.LVL24:
 293 00e8 0E94 0000 		call StdioSerial_TxByte
 294               	.LVL25:
  68:common/status.c **** 
 295               		.loc 1 68 0
 296 00ec 80E0      		ldi r24,0
 297 00ee 90E0      		ldi r25,0
 298 00f0 0895      		ret
 299               		.cfi_endproc
 300               	.LFE4:
 302               	.global	Serial_TxByte1
 304               	Serial_TxByte1:
 305               	.LFB9:
 126:common/status.c **** #else
 127:common/status.c **** 	while ( !( UCSRA & (1<<UDRE)) )		;
 128:common/status.c **** 	UDR=DataByte;
 129:common/status.c **** #endif
 130:common/status.c **** }
 131:common/status.c **** 
 132:common/status.c **** void Serial_TxByte1(const char DataByte)
 133:common/status.c **** {
 306               		.loc 1 133 0
 307               		.cfi_startproc
 308               	.LVL26:
 309               	/* prologue: function */
 310               	/* frame size = 0 */
 311               	/* stack size = 0 */
 312               	.L__stack_usage = 0
 313 00f2 0895      		ret
 314               		.cfi_endproc
 315               	.LFE9:
 317               	.global	Serial_RxByte0
 319               	Serial_RxByte0:
 320               	.LFB10:
 134:common/status.c **** #ifdef UCSR1A
 135:common/status.c **** 	while ( !( UCSR1A & (1<<UDRE1)) )		;
 136:common/status.c **** 	UDR1=DataByte;
 137:common/status.c **** #endif
 138:common/status.c **** }
 139:common/status.c **** 
 140:common/status.c **** 
 141:common/status.c **** /** Receives a byte from the USART.
 142:common/status.c ****  *
 143:common/status.c ****  *  \return Byte received from the USART
 144:common/status.c ****  */
 145:common/status.c **** char Serial_RxByte0(void)
 146:common/status.c **** {
 321               		.loc 1 146 0
 322               		.cfi_startproc
 323               	/* prologue: function */
 324               	/* frame size = 0 */
 325               	/* stack size = 0 */
 326               	.L__stack_usage = 0
 327               	.L43:
 147:common/status.c **** #ifdef UCSR0A
 148:common/status.c **** 	while (!(UCSR0A & (1 << RXC0)))	;
 328               		.loc 1 148 0 discriminator 1
 329 00f4 8091 C000 		lds r24,192
 330 00f8 87FF      		sbrs r24,7
 331 00fa 00C0      		rjmp .L43
 149:common/status.c **** 	return UDR0;
 332               		.loc 1 149 0
 333 00fc 8091 C600 		lds r24,198
 150:common/status.c **** #else 
 151:common/status.c **** 	while (!(UCSRA & (1<<RXC)))	;
 152:common/status.c **** 	return UDR;
 153:common/status.c **** #endif
 154:common/status.c **** }
 334               		.loc 1 154 0
 335 0100 0895      		ret
 336               		.cfi_endproc
 337               	.LFE10:
 339               	.global	Serial_RxByte1
 341               	Serial_RxByte1:
 342               	.LFB20:
 343               		.cfi_startproc
 344               	/* prologue: function */
 345               	/* frame size = 0 */
 346               	/* stack size = 0 */
 347               	.L__stack_usage = 0
 348 0102 80E0      		ldi r24,0
 349 0104 0895      		ret
 350               		.cfi_endproc
 351               	.LFE20:
 353               	.global	Serial_ByteRecieved0
 355               	Serial_ByteRecieved0:
 356               	.LFB12:
 155:common/status.c **** 
 156:common/status.c **** char Serial_RxByte1(void)
 157:common/status.c **** {
 158:common/status.c **** #ifdef UCSR1A
 159:common/status.c **** 	while (!(UCSR1A & (1 << RXC1)))	;
 160:common/status.c **** 	return UDR1;
 161:common/status.c **** #else
 162:common/status.c **** 	return 0;
 163:common/status.c **** #endif
 164:common/status.c **** }
 165:common/status.c **** 
 166:common/status.c **** uint8_t Serial_ByteRecieved0(void)
 167:common/status.c **** {
 357               		.loc 1 167 0
 358               		.cfi_startproc
 359               	/* prologue: function */
 360               	/* frame size = 0 */
 361               	/* stack size = 0 */
 362               	.L__stack_usage = 0
 168:common/status.c **** #ifdef UCSR0A
 169:common/status.c **** 	return (UCSR0A & (1 << RXC0));
 363               		.loc 1 169 0
 364 0106 8091 C000 		lds r24,192
 170:common/status.c **** #else
 171:common/status.c **** 	return (UCSRA & (1<<RXC));
 172:common/status.c **** #endif
 173:common/status.c **** }
 365               		.loc 1 173 0
 366 010a 8078      		andi r24,lo8(-128)
 367 010c 0895      		ret
 368               		.cfi_endproc
 369               	.LFE12:
 371               	.global	Serial_ByteRecieved1
 373               	Serial_ByteRecieved1:
 374               	.LFB13:
 174:common/status.c **** 
 175:common/status.c **** uint8_t Serial_ByteRecieved1(void)
 176:common/status.c **** {
 375               		.loc 1 176 0
 376               		.cfi_startproc
 377               	/* prologue: function */
 378               	/* frame size = 0 */
 379               	/* stack size = 0 */
 380               	.L__stack_usage = 0
 177:common/status.c **** #ifdef UCSR1A
 178:common/status.c **** 	return (UCSR1A & (1 << RXC1));
 179:common/status.c **** #else
 180:common/status.c **** 	return 0;
 181:common/status.c **** #endif
 182:common/status.c **** }
 381               		.loc 1 182 0
 382 010e 80E0      		ldi r24,0
 383 0110 0895      		ret
 384               		.cfi_endproc
 385               	.LFE13:
 387               	.global	Serial_Init
 389               	Serial_Init:
 390               	.LFB14:
 183:common/status.c **** 
 184:common/status.c **** void Serial_Init(const uint32_t BaudRate0,
 185:common/status.c **** 				 const uint32_t BaudRate1,
 186:common/status.c **** 				 const uint8_t Verbose)
 187:common/status.c **** {
 391               		.loc 1 187 0
 392               		.cfi_startproc
 393               	.LVL27:
 394 0112 0F93      		push r16
 395               	.LCFI15:
 396               		.cfi_def_cfa_offset 3
 397               		.cfi_offset 16, -2
 398               	/* prologue: function */
 399               	/* frame size = 0 */
 400               	/* stack size = 1 */
 401               	.L__stack_usage = 1
 188:common/status.c **** 	STATUS_VERBOSE = Verbose;
 402               		.loc 1 188 0
 403 0114 0093 0000 		sts STATUS_VERBOSE,r16
 189:common/status.c **** 	
 190:common/status.c **** 	if (BaudRate0<=0)
 404               		.loc 1 190 0
 405 0118 6115      		cp r22,__zero_reg__
 406 011a 7105      		cpc r23,__zero_reg__
 407 011c 8105      		cpc r24,__zero_reg__
 408 011e 9105      		cpc r25,__zero_reg__
 409 0120 01F4      		brne .L49
 191:common/status.c **** 		USART_Init0(DefaultBaudRate);
 410               		.loc 1 191 0
 411 0122 60E8      		ldi r22,lo8(-128)
 412 0124 75E2      		ldi r23,lo8(37)
 413 0126 80E0      		ldi r24,0
 414 0128 90E0      		ldi r25,0
 415               	.LVL28:
 416               	.L49:
 192:common/status.c **** 	else
 193:common/status.c **** 		USART_Init0(BaudRate0);
 417               		.loc 1 193 0
 418 012a 0E94 0000 		call USART_Init0
 419               	.LVL29:
 194:common/status.c **** 
 195:common/status.c **** 	if (BaudRate1<=0)
 196:common/status.c **** 		USART_Init1(DefaultBaudRate);
 197:common/status.c **** 	else
 198:common/status.c **** 		USART_Init1(BaudRate1);
 199:common/status.c **** 		
 200:common/status.c **** 	cls(0);
 420               		.loc 1 200 0
 421 012e 80E0      		ldi r24,0
 422 0130 0E94 0000 		call cls
 423               	.LVL30:
 201:common/status.c **** 	cls(1);
 424               		.loc 1 201 0
 425 0134 81E0      		ldi r24,lo8(1)
 426 0136 0E94 0000 		call cls
 427               	.LVL31:
 202:common/status.c **** 	
 203:common/status.c **** 	logv0("stdio initialised\n");
 428               		.loc 1 203 0
 429 013a 8091 0000 		lds r24,STATUS_VERBOSE
 430 013e 8823      		tst r24
 431 0140 01F0      		breq .L51
 432               		.loc 1 203 0 is_stmt 0 discriminator 1
 433 0142 80E0      		ldi r24,lo8(__c.2095)
 434 0144 90E0      		ldi r25,hi8(__c.2095)
 435 0146 9F93      		push r25
 436               	.LCFI16:
 437               		.cfi_def_cfa_offset 4
 438 0148 8F93      		push r24
 439               	.LCFI17:
 440               		.cfi_def_cfa_offset 5
 441 014a 80E0      		ldi r24,lo8(ser0stream)
 442 014c 90E0      		ldi r25,hi8(ser0stream)
 443 014e 9F93      		push r25
 444               	.LCFI18:
 445               		.cfi_def_cfa_offset 6
 446 0150 8F93      		push r24
 447               	.LCFI19:
 448               		.cfi_def_cfa_offset 7
 449 0152 0E94 0000 		call fprintf_P
 450               	.LVL32:
 451 0156 0F90      		pop __tmp_reg__
 452 0158 0F90      		pop __tmp_reg__
 453 015a 0F90      		pop __tmp_reg__
 454 015c 0F90      		pop __tmp_reg__
 455               	.LCFI20:
 456               		.cfi_def_cfa_offset 3
 457               	.L51:
 204:common/status.c **** 	if (STATUS_VERBOSE)
 458               		.loc 1 204 0 is_stmt 1
 459 015e 8091 0000 		lds r24,STATUS_VERBOSE
 460 0162 8823      		tst r24
 461 0164 01F0      		breq .L52
 205:common/status.c **** 		fprintf_P(&ser0stream,CompileDateTime);
 462               		.loc 1 205 0
 463 0166 80E0      		ldi r24,lo8(CompileDateTime)
 464 0168 90E0      		ldi r25,hi8(CompileDateTime)
 465 016a 9F93      		push r25
 466               	.LCFI21:
 467               		.cfi_def_cfa_offset 4
 468 016c 8F93      		push r24
 469               	.LCFI22:
 470               		.cfi_def_cfa_offset 5
 471 016e 80E0      		ldi r24,lo8(ser0stream)
 472 0170 90E0      		ldi r25,hi8(ser0stream)
 473 0172 9F93      		push r25
 474               	.LCFI23:
 475               		.cfi_def_cfa_offset 6
 476 0174 8F93      		push r24
 477               	.LCFI24:
 478               		.cfi_def_cfa_offset 7
 479 0176 0E94 0000 		call fprintf_P
 480               	.LVL33:
 481 017a 0F90      		pop __tmp_reg__
 482 017c 0F90      		pop __tmp_reg__
 483 017e 0F90      		pop __tmp_reg__
 484 0180 0F90      		pop __tmp_reg__
 485               	.LCFI25:
 486               		.cfi_def_cfa_offset 3
 487               	.L52:
 206:common/status.c **** 	
 207:common/status.c **** 	logv0("SerialPort0\n");
 488               		.loc 1 207 0
 489 0182 8091 0000 		lds r24,STATUS_VERBOSE
 490 0186 8823      		tst r24
 491 0188 01F0      		breq .L53
 492               		.loc 1 207 0 is_stmt 0 discriminator 1
 493 018a 80E0      		ldi r24,lo8(__c.2097)
 494 018c 90E0      		ldi r25,hi8(__c.2097)
 495 018e 9F93      		push r25
 496               	.LCFI26:
 497               		.cfi_def_cfa_offset 4
 498 0190 8F93      		push r24
 499               	.LCFI27:
 500               		.cfi_def_cfa_offset 5
 501 0192 80E0      		ldi r24,lo8(ser0stream)
 502 0194 90E0      		ldi r25,hi8(ser0stream)
 503 0196 9F93      		push r25
 504               	.LCFI28:
 505               		.cfi_def_cfa_offset 6
 506 0198 8F93      		push r24
 507               	.LCFI29:
 508               		.cfi_def_cfa_offset 7
 509 019a 0E94 0000 		call fprintf_P
 510               	.LVL34:
 511 019e 0F90      		pop __tmp_reg__
 512 01a0 0F90      		pop __tmp_reg__
 513 01a2 0F90      		pop __tmp_reg__
 514 01a4 0F90      		pop __tmp_reg__
 515               	.LCFI30:
 516               		.cfi_def_cfa_offset 3
 517               	.L53:
 208:common/status.c **** 	logv1("SerialPort1\n");
 518               		.loc 1 208 0 is_stmt 1
 519 01a6 8091 0000 		lds r24,STATUS_VERBOSE
 520 01aa 8823      		tst r24
 521 01ac 01F0      		breq .L48
 522               		.loc 1 208 0 is_stmt 0 discriminator 1
 523 01ae 80E0      		ldi r24,lo8(__c.2099)
 524 01b0 90E0      		ldi r25,hi8(__c.2099)
 525 01b2 9F93      		push r25
 526               	.LCFI31:
 527               		.cfi_def_cfa_offset 4
 528 01b4 8F93      		push r24
 529               	.LCFI32:
 530               		.cfi_def_cfa_offset 5
 531 01b6 80E0      		ldi r24,lo8(ser0stream)
 532 01b8 90E0      		ldi r25,hi8(ser0stream)
 533 01ba 9F93      		push r25
 534               	.LCFI33:
 535               		.cfi_def_cfa_offset 6
 536 01bc 8F93      		push r24
 537               	.LCFI34:
 538               		.cfi_def_cfa_offset 7
 539 01be 0E94 0000 		call fprintf_P
 540               	.LVL35:
 541 01c2 0F90      		pop __tmp_reg__
 542 01c4 0F90      		pop __tmp_reg__
 543 01c6 0F90      		pop __tmp_reg__
 544 01c8 0F90      		pop __tmp_reg__
 545               	.LCFI35:
 546               		.cfi_def_cfa_offset 3
 547               	.L48:
 548               	/* epilogue start */
 209:common/status.c **** }
 549               		.loc 1 209 0 is_stmt 1
 550 01ca 0F91      		pop r16
 551               	.LVL36:
 552 01cc 0895      		ret
 553               		.cfi_endproc
 554               	.LFE14:
 556               		.section	.rodata.str1.1,"aMS",@progbits,1
 557               	.LC0:
 558 0000 2534 2E34 		.string	"%4.4X "
 558      5820 00
 559               	.LC1:
 560 0007 2532 2E32 		.string	"%2.2X "
 560      5820 00
 561               	.LC2:
 562 000e 2020 2000 		.string	"   "
 563               	.LC3:
 564 0012 2563 00   		.string	"%c"
 565               	.LC4:
 566 0015 2000      		.string	" "
 567               	.LC5:
 568 0017 2E00      		.string	"."
 569               		.text
 570               	.global	HexDump
 572               	HexDump:
 573               	.LFB15:
 210:common/status.c **** 
 211:common/status.c **** #ifdef USE_HEXDUMP
 212:common/status.c **** void HexDump(const uint8_t 	*Buff, 
 213:common/status.c **** 				   uint16_t Length,
 214:common/status.c **** 				   uint8_t	Port)
 215:common/status.c **** {
 574               		.loc 1 215 0
 575               		.cfi_startproc
 576               	.LVL37:
 577 01ce 2F92      		push r2
 578               	.LCFI36:
 579               		.cfi_def_cfa_offset 3
 580               		.cfi_offset 2, -2
 581 01d0 3F92      		push r3
 582               	.LCFI37:
 583               		.cfi_def_cfa_offset 4
 584               		.cfi_offset 3, -3
 585 01d2 4F92      		push r4
 586               	.LCFI38:
 587               		.cfi_def_cfa_offset 5
 588               		.cfi_offset 4, -4
 589 01d4 5F92      		push r5
 590               	.LCFI39:
 591               		.cfi_def_cfa_offset 6
 592               		.cfi_offset 5, -5
 593 01d6 6F92      		push r6
 594               	.LCFI40:
 595               		.cfi_def_cfa_offset 7
 596               		.cfi_offset 6, -6
 597 01d8 7F92      		push r7
 598               	.LCFI41:
 599               		.cfi_def_cfa_offset 8
 600               		.cfi_offset 7, -7
 601 01da 8F92      		push r8
 602               	.LCFI42:
 603               		.cfi_def_cfa_offset 9
 604               		.cfi_offset 8, -8
 605 01dc 9F92      		push r9
 606               	.LCFI43:
 607               		.cfi_def_cfa_offset 10
 608               		.cfi_offset 9, -9
 609 01de AF92      		push r10
 610               	.LCFI44:
 611               		.cfi_def_cfa_offset 11
 612               		.cfi_offset 10, -10
 613 01e0 BF92      		push r11
 614               	.LCFI45:
 615               		.cfi_def_cfa_offset 12
 616               		.cfi_offset 11, -11
 617 01e2 CF92      		push r12
 618               	.LCFI46:
 619               		.cfi_def_cfa_offset 13
 620               		.cfi_offset 12, -12
 621 01e4 DF92      		push r13
 622               	.LCFI47:
 623               		.cfi_def_cfa_offset 14
 624               		.cfi_offset 13, -13
 625 01e6 EF92      		push r14
 626               	.LCFI48:
 627               		.cfi_def_cfa_offset 15
 628               		.cfi_offset 14, -14
 629 01e8 FF92      		push r15
 630               	.LCFI49:
 631               		.cfi_def_cfa_offset 16
 632               		.cfi_offset 15, -15
 633 01ea 0F93      		push r16
 634               	.LCFI50:
 635               		.cfi_def_cfa_offset 17
 636               		.cfi_offset 16, -16
 637 01ec 1F93      		push r17
 638               	.LCFI51:
 639               		.cfi_def_cfa_offset 18
 640               		.cfi_offset 17, -17
 641 01ee CF93      		push r28
 642               	.LCFI52:
 643               		.cfi_def_cfa_offset 19
 644               		.cfi_offset 28, -18
 645 01f0 DF93      		push r29
 646               	.LCFI53:
 647               		.cfi_def_cfa_offset 20
 648               		.cfi_offset 29, -19
 649 01f2 CDB7      		in r28,__SP_L__
 650 01f4 DEB7      		in r29,__SP_H__
 651               	.LCFI54:
 652               		.cfi_def_cfa_register 28
 653 01f6 C155      		subi r28,81
 654 01f8 D109      		sbc r29,__zero_reg__
 655               	.LCFI55:
 656               		.cfi_def_cfa_offset 101
 657 01fa 0FB6      		in __tmp_reg__,__SREG__
 658 01fc F894      		cli
 659 01fe DEBF      		out __SP_H__,r29
 660 0200 0FBE      		out __SREG__,__tmp_reg__
 661 0202 CDBF      		out __SP_L__,r28
 662               	/* prologue: function */
 663               	/* frame size = 81 */
 664               	/* stack size = 99 */
 665               	.L__stack_usage = 99
 666 0204 4C01      		movw r8,r24
 667 0206 2B01      		movw r4,r22
 668 0208 6296      		adiw r28,81-63
 669 020a 4FAF      		std Y+63,r20
 670 020c 6297      		sbiw r28,81-63
 671               	.LVL38:
 216:common/status.c **** 	char		LineBuff[80];
 217:common/status.c **** 	char		*LineBuffPos;
 218:common/status.c **** 	uint16_t	LineOffset;
 219:common/status.c **** 	uint16_t	CharOffset;
 220:common/status.c **** 	uint8_t		*BuffPtr;
 221:common/status.c **** 	
 222:common/status.c **** 	BuffPtr=(uint8_t *)Buff;
 223:common/status.c **** 	
 224:common/status.c **** 	for(LineOffset=0;LineOffset<Length;LineOffset+=16, BuffPtr+=16)
 672               		.loc 1 224 0
 673 020e A12C      		mov r10,__zero_reg__
 674 0210 B12C      		mov r11,__zero_reg__
 225:common/status.c **** 	{
 226:common/status.c **** 		LineBuffPos=LineBuff;
 227:common/status.c **** 		LineBuffPos+=sprintf(LineBuffPos,"%4.4X ",LineOffset);
 675               		.loc 1 227 0
 676 0212 8E01      		movw r16,r28
 677 0214 0F5F      		subi r16,-1
 678 0216 1F4F      		sbci r17,-1
 679               	.LVL39:
 680               	.L68:
 224:common/status.c **** 	{
 681               		.loc 1 224 0 discriminator 1
 682 0218 A414      		cp r10,r4
 683 021a B504      		cpc r11,r5
 684 021c 00F0      		brlo .+2
 685 021e 00C0      		rjmp .L90
 686               		.loc 1 227 0
 687 0220 BF92      		push r11
 688 0222 AF92      		push r10
 689 0224 80E0      		ldi r24,lo8(.LC0)
 690 0226 90E0      		ldi r25,hi8(.LC0)
 691 0228 9F93      		push r25
 692 022a 8F93      		push r24
 693 022c 1F93      		push r17
 694 022e 0F93      		push r16
 695 0230 0E94 0000 		call sprintf
 696               	.LVL40:
 697 0234 7801      		movw r14,r16
 698 0236 E80E      		add r14,r24
 699 0238 F91E      		adc r15,r25
 700               	.LVL41:
 701 023a 6401      		movw r12,r8
 702 023c F0E1      		ldi r31,16
 703 023e 8F0E      		add r8,r31
 704 0240 911C      		adc r9,__zero_reg__
 705               	.LVL42:
 706 0242 0F90      		pop __tmp_reg__
 707 0244 0F90      		pop __tmp_reg__
 708 0246 0F90      		pop __tmp_reg__
 709 0248 0F90      		pop __tmp_reg__
 710 024a 0F90      		pop __tmp_reg__
 711 024c 0F90      		pop __tmp_reg__
 712 024e 3601      		movw r6,r12
 713 0250 1501      		movw r2,r10
 714 0252 2C18      		sub r2,r12
 715 0254 3D08      		sbc r3,r13
 716               	.LVL43:
 717               	.L71:
 228:common/status.c **** 		
 229:common/status.c **** 		for(CharOffset=0;CharOffset<16;CharOffset++)
 230:common/status.c **** 		{
 231:common/status.c **** 			if((LineOffset+CharOffset)<Length)
 718               		.loc 1 231 0
 719 0256 C301      		movw r24,r6
 720 0258 820D      		add r24,r2
 721 025a 931D      		adc r25,r3
 722 025c 8415      		cp r24,r4
 723 025e 9505      		cpc r25,r5
 724 0260 00F4      		brsh .L69
 232:common/status.c **** 				LineBuffPos+=sprintf(LineBuffPos,"%2.2X ",BuffPtr[CharOffset]);
 725               		.loc 1 232 0
 726 0262 F301      		movw r30,r6
 727 0264 8081      		ld r24,Z
 728 0266 1F92      		push __zero_reg__
 729 0268 8F93      		push r24
 730 026a 80E0      		ldi r24,lo8(.LC1)
 731 026c 90E0      		ldi r25,hi8(.LC1)
 732 026e 9F93      		push r25
 733 0270 8F93      		push r24
 734 0272 FF92      		push r15
 735 0274 EF92      		push r14
 736 0276 0E94 0000 		call sprintf
 737               	.LVL44:
 738 027a E80E      		add r14,r24
 739 027c F91E      		adc r15,r25
 740               	.LVL45:
 741 027e 0F90      		pop __tmp_reg__
 742 0280 0F90      		pop __tmp_reg__
 743 0282 0F90      		pop __tmp_reg__
 744 0284 0F90      		pop __tmp_reg__
 745 0286 0F90      		pop __tmp_reg__
 746 0288 0F90      		pop __tmp_reg__
 747 028a 00C0      		rjmp .L70
 748               	.L69:
 233:common/status.c **** 			else
 234:common/status.c **** 			    LineBuffPos+=sprintf(LineBuffPos,"   ");
 749               		.loc 1 234 0
 750 028c 60E0      		ldi r22,lo8(.LC2)
 751 028e 70E0      		ldi r23,hi8(.LC2)
 752 0290 C701      		movw r24,r14
 753 0292 0E94 0000 		call strcpy
 754               	.LVL46:
 755 0296 F3E0      		ldi r31,3
 756 0298 EF0E      		add r14,r31
 757 029a F11C      		adc r15,__zero_reg__
 758               	.LVL47:
 759               	.L70:
 760 029c 2FEF      		ldi r18,-1
 761 029e 621A      		sub r6,r18
 762 02a0 720A      		sbc r7,r18
 763               	.LVL48:
 229:common/status.c **** 		{
 764               		.loc 1 229 0 discriminator 2
 765 02a2 8614      		cp r8,r6
 766 02a4 9704      		cpc r9,r7
 767 02a6 01F4      		brne .L71
 768               	.LVL49:
 769               	.L84:
 235:common/status.c **** 		}
 236:common/status.c **** 		
 237:common/status.c **** 		for(CharOffset=0;CharOffset<16;CharOffset++)
 238:common/status.c **** 		{
 239:common/status.c **** 			if((LineOffset+CharOffset)<Length)
 770               		.loc 1 239 0
 771 02a8 C601      		movw r24,r12
 772 02aa 820D      		add r24,r2
 773 02ac 931D      		adc r25,r3
 774 02ae 8415      		cp r24,r4
 775 02b0 9505      		cpc r25,r5
 776 02b2 00F4      		brsh .L72
 240:common/status.c **** 			{
 241:common/status.c **** 				if(isprint(BuffPtr[CharOffset]))
 777               		.loc 1 241 0
 778 02b4 F601      		movw r30,r12
 779 02b6 7080      		ld r7,Z
 780 02b8 872D      		mov r24,r7
 781 02ba 90E0      		ldi r25,0
 782 02bc 0E94 0000 		call isprint
 783               	.LVL50:
 784 02c0 892B      		or r24,r25
 785 02c2 01F0      		breq .L73
 242:common/status.c **** 					LineBuffPos+=sprintf(LineBuffPos,"%c",BuffPtr[CharOffset]);
 786               		.loc 1 242 0
 787 02c4 1F92      		push __zero_reg__
 788 02c6 7F92      		push r7
 789 02c8 80E0      		ldi r24,lo8(.LC3)
 790 02ca 90E0      		ldi r25,hi8(.LC3)
 791 02cc 9F93      		push r25
 792 02ce 8F93      		push r24
 793 02d0 FF92      		push r15
 794 02d2 EF92      		push r14
 795 02d4 0E94 0000 		call sprintf
 796               	.LVL51:
 797 02d8 E80E      		add r14,r24
 798 02da F91E      		adc r15,r25
 799               	.LVL52:
 800 02dc 0F90      		pop __tmp_reg__
 801 02de 0F90      		pop __tmp_reg__
 802 02e0 0F90      		pop __tmp_reg__
 803 02e2 0F90      		pop __tmp_reg__
 804 02e4 0F90      		pop __tmp_reg__
 805 02e6 0F90      		pop __tmp_reg__
 806 02e8 00C0      		rjmp .L74
 807               	.L73:
 243:common/status.c **** 				else
 244:common/status.c **** 					LineBuffPos+=sprintf(LineBuffPos," ");
 808               		.loc 1 244 0
 809 02ea 60E0      		ldi r22,lo8(.LC4)
 810 02ec 70E0      		ldi r23,hi8(.LC4)
 811 02ee C701      		movw r24,r14
 812 02f0 0E94 0000 		call strcpy
 813               	.LVL53:
 814 02f4 FFEF      		ldi r31,-1
 815 02f6 EF1A      		sub r14,r31
 816 02f8 FF0A      		sbc r15,r31
 817               	.LVL54:
 818 02fa 00C0      		rjmp .L74
 819               	.L72:
 245:common/status.c **** 			}
 246:common/status.c **** 			else
 247:common/status.c **** 				LineBuffPos+=sprintf(LineBuffPos,".");
 820               		.loc 1 247 0
 821 02fc 60E0      		ldi r22,lo8(.LC5)
 822 02fe 70E0      		ldi r23,hi8(.LC5)
 823 0300 C701      		movw r24,r14
 824 0302 0E94 0000 		call strcpy
 825               	.LVL55:
 826 0306 2FEF      		ldi r18,-1
 827 0308 E21A      		sub r14,r18
 828 030a F20A      		sbc r15,r18
 829               	.LVL56:
 830               	.L74:
 831 030c 8FEF      		ldi r24,-1
 832 030e C81A      		sub r12,r24
 833 0310 D80A      		sbc r13,r24
 834               	.LVL57:
 237:common/status.c **** 		{
 835               		.loc 1 237 0 discriminator 2
 836 0312 C814      		cp r12,r8
 837 0314 D904      		cpc r13,r9
 838 0316 01F4      		brne .L84
 248:common/status.c **** 		}
 249:common/status.c **** 		switch (Port)
 839               		.loc 1 249 0
 840 0318 6296      		adiw r28,81-63
 841 031a 9FAD      		ldd r25,Y+63
 842 031c 6297      		sbiw r28,81-63
 843 031e 9923      		tst r25
 844 0320 01F0      		breq .L77
 845 0322 9130      		cpi r25,lo8(1)
 846 0324 01F0      		breq .L78
 847 0326 00C0      		rjmp .L76
 848               	.L77:
 250:common/status.c **** 		{
 251:common/status.c **** 			case 0 : logv0("%s\n",LineBuff); break;
 849               		.loc 1 251 0
 850 0328 8091 0000 		lds r24,STATUS_VERBOSE
 851 032c 8823      		tst r24
 852 032e 01F0      		breq .L76
 853               		.loc 1 251 0 is_stmt 0 discriminator 1
 854 0330 1F93      		push r17
 855 0332 0F93      		push r16
 856 0334 E0E0      		ldi r30,lo8(__c.2118)
 857 0336 F0E0      		ldi r31,hi8(__c.2118)
 858 0338 FF93      		push r31
 859 033a EF93      		push r30
 860 033c 00C0      		rjmp .L89
 861               	.L78:
 252:common/status.c **** 			case 1 : logv1("%s\n",LineBuff); break;
 862               		.loc 1 252 0 is_stmt 1
 863 033e 8091 0000 		lds r24,STATUS_VERBOSE
 864 0342 8823      		tst r24
 865 0344 01F0      		breq .L76
 866               		.loc 1 252 0 is_stmt 0 discriminator 1
 867 0346 1F93      		push r17
 868 0348 0F93      		push r16
 869 034a 80E0      		ldi r24,lo8(__c.2122)
 870 034c 90E0      		ldi r25,hi8(__c.2122)
 871 034e 9F93      		push r25
 872 0350 8F93      		push r24
 873               	.L89:
 874 0352 80E0      		ldi r24,lo8(ser0stream)
 875 0354 90E0      		ldi r25,hi8(ser0stream)
 876 0356 9F93      		push r25
 877 0358 8F93      		push r24
 878 035a 0E94 0000 		call fprintf_P
 879               	.LVL58:
 880 035e 0F90      		pop __tmp_reg__
 881 0360 0F90      		pop __tmp_reg__
 882 0362 0F90      		pop __tmp_reg__
 883 0364 0F90      		pop __tmp_reg__
 884 0366 0F90      		pop __tmp_reg__
 885 0368 0F90      		pop __tmp_reg__
 886               	.L76:
 224:common/status.c **** 	{
 887               		.loc 1 224 0 is_stmt 1 discriminator 2
 888 036a F0E1      		ldi r31,16
 889 036c AF0E      		add r10,r31
 890 036e B11C      		adc r11,__zero_reg__
 891               	.LVL59:
 892 0370 00C0      		rjmp .L68
 893               	.LVL60:
 894               	.L90:
 895               	/* epilogue start */
 253:common/status.c **** 		}
 254:common/status.c **** 	}
 255:common/status.c **** }
 896               		.loc 1 255 0
 897 0372 CF5A      		subi r28,-81
 898 0374 DF4F      		sbci r29,-1
 899               	.LVL61:
 900 0376 0FB6      		in __tmp_reg__,__SREG__
 901 0378 F894      		cli
 902 037a DEBF      		out __SP_H__,r29
 903 037c 0FBE      		out __SREG__,__tmp_reg__
 904 037e CDBF      		out __SP_L__,r28
 905 0380 DF91      		pop r29
 906 0382 CF91      		pop r28
 907               	.LVL62:
 908 0384 1F91      		pop r17
 909 0386 0F91      		pop r16
 910 0388 FF90      		pop r15
 911 038a EF90      		pop r14
 912 038c DF90      		pop r13
 913 038e CF90      		pop r12
 914 0390 BF90      		pop r11
 915 0392 AF90      		pop r10
 916               	.LVL63:
 917 0394 9F90      		pop r9
 918 0396 8F90      		pop r8
 919               	.LVL64:
 920 0398 7F90      		pop r7
 921 039a 6F90      		pop r6
 922 039c 5F90      		pop r5
 923 039e 4F90      		pop r4
 924               	.LVL65:
 925 03a0 3F90      		pop r3
 926 03a2 2F90      		pop r2
 927 03a4 0895      		ret
 928               		.cfi_endproc
 929               	.LFE15:
 931               	.global	HexDumpHead
 933               	HexDumpHead:
 934               	.LFB16:
 256:common/status.c **** 
 257:common/status.c **** void HexDumpHead(const uint8_t 	*Buff, 
 258:common/status.c **** 				       uint16_t Length,
 259:common/status.c **** 				       uint8_t	Port) 
 260:common/status.c **** {
 935               		.loc 1 260 0
 936               		.cfi_startproc
 937               	.LVL66:
 938 03a6 CF92      		push r12
 939               	.LCFI56:
 940               		.cfi_def_cfa_offset 3
 941               		.cfi_offset 12, -2
 942 03a8 DF92      		push r13
 943               	.LCFI57:
 944               		.cfi_def_cfa_offset 4
 945               		.cfi_offset 13, -3
 946 03aa EF92      		push r14
 947               	.LCFI58:
 948               		.cfi_def_cfa_offset 5
 949               		.cfi_offset 14, -4
 950 03ac FF92      		push r15
 951               	.LCFI59:
 952               		.cfi_def_cfa_offset 6
 953               		.cfi_offset 15, -5
 954 03ae 1F93      		push r17
 955               	.LCFI60:
 956               		.cfi_def_cfa_offset 7
 957               		.cfi_offset 17, -6
 958 03b0 CF93      		push r28
 959               	.LCFI61:
 960               		.cfi_def_cfa_offset 8
 961               		.cfi_offset 28, -7
 962 03b2 DF93      		push r29
 963               	.LCFI62:
 964               		.cfi_def_cfa_offset 9
 965               		.cfi_offset 29, -8
 966               	/* prologue: function */
 967               	/* frame size = 0 */
 968               	/* stack size = 7 */
 969               	.L__stack_usage = 7
 970 03b4 7C01      		movw r14,r24
 971 03b6 6B01      		movw r12,r22
 972 03b8 142F      		mov r17,r20
 973               	.LVL67:
 261:common/status.c **** 	FILE	*File;
 262:common/status.c **** 
 263:common/status.c **** 	File=&ser0stream;
 264:common/status.c **** 	
 265:common/status.c **** 	switch (Port)
 974               		.loc 1 265 0
 975 03ba 4130      		cpi r20,lo8(1)
 976 03bc 01F0      		breq .L94
 263:common/status.c **** 	
 977               		.loc 1 263 0
 978 03be C0E0      		ldi r28,lo8(ser0stream)
 979 03c0 D0E0      		ldi r29,hi8(ser0stream)
 980 03c2 00C0      		rjmp .L93
 981               	.L94:
 266:common/status.c **** 	{
 267:common/status.c **** 		case 0 : File=&ser0stream; break;
 268:common/status.c **** 		case 1 : File=&ser1stream; break;
 982               		.loc 1 268 0
 983 03c4 C0E0      		ldi r28,lo8(ser1stream)
 984 03c6 D0E0      		ldi r29,hi8(ser1stream)
 985               	.L93:
 986               	.LVL68:
 269:common/status.c **** 	}
 270:common/status.c **** 
 271:common/status.c **** 	fprintf_P(File,PSTR("Addr 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F ASCII\n"));
 987               		.loc 1 271 0
 988 03c8 80E0      		ldi r24,lo8(__c.2136)
 989 03ca 90E0      		ldi r25,hi8(__c.2136)
 990               	.LVL69:
 991 03cc 9F93      		push r25
 992               	.LCFI63:
 993               		.cfi_def_cfa_offset 10
 994 03ce 8F93      		push r24
 995               	.LCFI64:
 996               		.cfi_def_cfa_offset 11
 997 03d0 DF93      		push r29
 998               	.LCFI65:
 999               		.cfi_def_cfa_offset 12
 1000 03d2 CF93      		push r28
 1001               	.LCFI66:
 1002               		.cfi_def_cfa_offset 13
 1003 03d4 0E94 0000 		call fprintf_P
 1004               	.LVL70:
 272:common/status.c **** 	fprintf_P(File,PSTR("----------------------------------------------------------\n"));
 1005               		.loc 1 272 0
 1006 03d8 80E0      		ldi r24,lo8(__c.2138)
 1007 03da 90E0      		ldi r25,hi8(__c.2138)
 1008 03dc 9F93      		push r25
 1009               	.LCFI67:
 1010               		.cfi_def_cfa_offset 14
 1011 03de 8F93      		push r24
 1012               	.LCFI68:
 1013               		.cfi_def_cfa_offset 15
 1014 03e0 DF93      		push r29
 1015               	.LCFI69:
 1016               		.cfi_def_cfa_offset 16
 1017 03e2 CF93      		push r28
 1018               	.LCFI70:
 1019               		.cfi_def_cfa_offset 17
 1020 03e4 0E94 0000 		call fprintf_P
 1021               	.LVL71:
 273:common/status.c **** 
 274:common/status.c **** 	HexDump(Buff,Length,Port);
 1022               		.loc 1 274 0
 1023 03e8 8DB7      		in r24,__SP_L__
 1024 03ea 9EB7      		in r25,__SP_H__
 1025 03ec 0896      		adiw r24,8
 1026 03ee 0FB6      		in __tmp_reg__,__SREG__
 1027 03f0 F894      		cli
 1028 03f2 9EBF      		out __SP_H__,r25
 1029 03f4 0FBE      		out __SREG__,__tmp_reg__
 1030 03f6 8DBF      		out __SP_L__,r24
 1031               	.LCFI71:
 1032               		.cfi_def_cfa_offset 9
 1033 03f8 412F      		mov r20,r17
 1034 03fa B601      		movw r22,r12
 1035 03fc C701      		movw r24,r14
 1036               	/* epilogue start */
 275:common/status.c **** };
 1037               		.loc 1 275 0
 1038 03fe DF91      		pop r29
 1039 0400 CF91      		pop r28
 1040               	.LVL72:
 1041 0402 1F91      		pop r17
 1042               	.LVL73:
 1043 0404 FF90      		pop r15
 1044 0406 EF90      		pop r14
 1045               	.LVL74:
 1046 0408 DF90      		pop r13
 1047 040a CF90      		pop r12
 1048               	.LVL75:
 274:common/status.c **** };
 1049               		.loc 1 274 0
 1050 040c 0C94 0000 		jmp HexDump
 1051               	.LVL76:
 1052               		.cfi_endproc
 1053               	.LFE16:
 1055               		.section	.progmem.data,"a",@progbits
 1058               	__c.2138:
 1059 0000 2D2D 2D2D 		.string	"----------------------------------------------------------\n"
 1059      2D2D 2D2D 
 1059      2D2D 2D2D 
 1059      2D2D 2D2D 
 1059      2D2D 2D2D 
 1062               	__c.2136:
 1063 003c 4164 6472 		.string	"Addr 00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F ASCII\n"
 1063      2030 3020 
 1063      3031 2030 
 1063      3220 3033 
 1063      2030 3420 
 1066               	__c.2122:
 1067 0078 2573 0A00 		.string	"%s\n"
 1070               	__c.2118:
 1071 007c 2573 0A00 		.string	"%s\n"
 1074               	__c.2099:
 1075 0080 5365 7269 		.string	"SerialPort1\n"
 1075      616C 506F 
 1075      7274 310A 
 1075      00
 1078               	__c.2097:
 1079 008d 5365 7269 		.string	"SerialPort0\n"
 1079      616C 506F 
 1079      7274 300A 
 1079      00
 1082               	__c.2095:
 1083 009a 7374 6469 		.string	"stdio initialised\n"
 1083      6F20 696E 
 1083      6974 6961 
 1083      6C69 7365 
 1083      640A 00
 1086               	__c.2058:
 1087 00ad 1B5B 303B 		.string	"\033[0;0H"
 1087      3048 00
 1090               	__c.2056:
 1091 00b4 1B5B 324A 		.string	"\033[2J"
 1091      00
 1094               	__c.2054:
 1095 00b9 1B5B 303B 		.string	"\033[0;0H"
 1095      3048 00
 1098               	__c.2052:
 1099 00c0 1B5B 324A 		.string	"\033[2J"
 1099      00
 1100               	.global	CompileDateTime
 1103               	CompileDateTime:
 1104 00c5 636F 6D70 		.string	"compiled at 23:45:45 on Mar 23 2022\n"
 1104      696C 6564 
 1104      2061 7420 
 1104      3233 3A34 
 1104      353A 3435 
 1105               	.global	ser1stream
 1106               		.data
 1109               	ser1stream:
 1110 0000 0000 00   		.zero	3
 1111 0003 02        		.byte	2
 1112 0004 0000 0000 		.zero	4
 1113 0008 0000      		.word	gs(StdioSerial_TxByte1)
 1114 000a 0000      		.word	0
 1115 000c 0000      		.word	0
 1116               	.global	ser0stream
 1119               	ser0stream:
 1120 000e 0000 00   		.zero	3
 1121 0011 02        		.byte	2
 1122 0012 0000 0000 		.zero	4
 1123 0016 0000      		.word	gs(StdioSerial_TxByte0)
 1124 0018 0000      		.word	0
 1125 001a 0000      		.word	0
 1126               	.global	STATUS_VERBOSE
 1127               		.section .bss
 1130               	STATUS_VERBOSE:
 1131 0000 00        		.zero	1
 1132               		.text
 1133               	.Letext0:
 1134               		.file 2 "d:\\winavr\\avr\\include\\stdint.h"
 1135               		.file 3 "d:\\winavr\\avr\\include\\stdio.h"
 1136               		.file 4 "d:\\winavr\\avr\\include\\ctype.h"
 1137               		.file 5 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:00000000 status.c
D:\cygwin64\tmp\ccvMjozE.s:2      *ABS*:0000003e __SP_H__
D:\cygwin64\tmp\ccvMjozE.s:3      *ABS*:0000003d __SP_L__
D:\cygwin64\tmp\ccvMjozE.s:4      *ABS*:0000003f __SREG__
D:\cygwin64\tmp\ccvMjozE.s:5      *ABS*:00000000 __tmp_reg__
D:\cygwin64\tmp\ccvMjozE.s:6      *ABS*:00000001 __zero_reg__
D:\cygwin64\tmp\ccvMjozE.s:12     .text:00000000 cls
D:\cygwin64\tmp\ccvMjozE.s:1130   .bss:00000000 STATUS_VERBOSE
D:\cygwin64\tmp\ccvMjozE.s:1098   .progmem.data:000000c0 __c.2052
D:\cygwin64\tmp\ccvMjozE.s:1119   .data:0000000e ser0stream
D:\cygwin64\tmp\ccvMjozE.s:1094   .progmem.data:000000b9 __c.2054
D:\cygwin64\tmp\ccvMjozE.s:1090   .progmem.data:000000b4 __c.2056
D:\cygwin64\tmp\ccvMjozE.s:1086   .progmem.data:000000ad __c.2058
D:\cygwin64\tmp\ccvMjozE.s:137    .text:0000007c USART_Init0
D:\cygwin64\tmp\ccvMjozE.s:174    .text:000000aa USART_Init1
D:\cygwin64\tmp\ccvMjozE.s:189    .text:000000ac Serial_TxByte0
D:\cygwin64\tmp\ccvMjozE.s:211    .text:000000ba StdioSerial_TxByte
D:\cygwin64\tmp\ccvMjozE.s:259    .text:000000da StdioSerial_TxByte0
D:\cygwin64\tmp\ccvMjozE.s:281    .text:000000e6 StdioSerial_TxByte1
D:\cygwin64\tmp\ccvMjozE.s:304    .text:000000f2 Serial_TxByte1
D:\cygwin64\tmp\ccvMjozE.s:319    .text:000000f4 Serial_RxByte0
D:\cygwin64\tmp\ccvMjozE.s:341    .text:00000102 Serial_RxByte1
D:\cygwin64\tmp\ccvMjozE.s:355    .text:00000106 Serial_ByteRecieved0
D:\cygwin64\tmp\ccvMjozE.s:373    .text:0000010e Serial_ByteRecieved1
D:\cygwin64\tmp\ccvMjozE.s:389    .text:00000112 Serial_Init
D:\cygwin64\tmp\ccvMjozE.s:1082   .progmem.data:0000009a __c.2095
D:\cygwin64\tmp\ccvMjozE.s:1103   .progmem.data:000000c5 CompileDateTime
D:\cygwin64\tmp\ccvMjozE.s:1078   .progmem.data:0000008d __c.2097
D:\cygwin64\tmp\ccvMjozE.s:1074   .progmem.data:00000080 __c.2099
D:\cygwin64\tmp\ccvMjozE.s:572    .text:000001ce HexDump
D:\cygwin64\tmp\ccvMjozE.s:1070   .progmem.data:0000007c __c.2118
D:\cygwin64\tmp\ccvMjozE.s:1066   .progmem.data:00000078 __c.2122
D:\cygwin64\tmp\ccvMjozE.s:933    .text:000003a6 HexDumpHead
D:\cygwin64\tmp\ccvMjozE.s:1109   .data:00000000 ser1stream
D:\cygwin64\tmp\ccvMjozE.s:1062   .progmem.data:0000003c __c.2136
D:\cygwin64\tmp\ccvMjozE.s:1058   .progmem.data:00000000 __c.2138

UNDEFINED SYMBOLS
fprintf_P
__udivmodsi4
sprintf
strcpy
isprint
__do_copy_data
__do_clear_bss
